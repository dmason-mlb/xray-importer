{
  "data": {
    "__schema": {
      "queryType": {
        "name": "Query"
      },
      "mutationType": {
        "name": "Mutation"
      },
      "types": [
        {
          "kind": "OBJECT",
          "name": "Query",
          "description": "",
          "fields": [
            {
              "name": "getFolder",
              "description": "Returns the folder for the given projectId with the specified Path along with its child folders.\n===\nThe query below returns the root folder and all its child folders.\n<pre>\n{\n    <b>getFolder</b>(projectId: \"10000\", path: \"/\") {\n        name\n        path\n        testsCount\n        folders\n    }\n}\n</pre>\n===\n===\nThe query below returns the folder with path \"/generic\" and all its child folders.\n<pre>\n{\n    <b>getFolder</b>(projectId: \"10000\", path: \"/generic\") {\n        name\n        path\n        testsCount\n        folders\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "projectId",
                  "description": "the project id of the Folder.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testPlanId",
                  "description": "the Test Plan id of the Folder.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "path",
                  "description": "the path of the Folder.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FolderResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getDataset",
              "description": "Returns a Dataset by its testIssueId.\n===\nThe Query below returns a Dataset.\n<pre>\n{\n    <b>getDataset</b>(testIssueId: \"12345\") {\n        id\n        parameters {\n            name\n            type\n            listValues\n        }\n        rows { \n          order \n          Values\n        }\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "testIssueId",
                  "description": "The unique identifier of the Dataset to be returned.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testExecIssueId",
                  "description": "(Optional) The unique identifier of the Test Execution.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testPlanIssueId",
                  "description": "(Optional) The unique identifier of the Test Plan.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "callTestIssueId",
                  "description": "(Optional) The unique identifier of the Test Call.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Dataset",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getDatasets",
              "description": "Returns multiple Datasets based on optional filters.\n===\nThe Query below demonstrates how to retrieve multiple Datasets, including their metadata, parameters\n<pre>\n{\n    <b>getDatasets</b>(\n        testIssueIds: [\"30000\", \"40000\"],\n    ) \n      {\n        id\n        testIssueId  \n        testExecIssueId\n        testPlanIssueId\n        parameters {\n            name\n            type\n            listValues\n        }\n        rows {\n          order\n          Values\n        }\n      }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "testIssueIds",
                  "description": "Filter by test issue IDs.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testExecIssueIds",
                  "description": "(Optional) Filter by Test ExecutionIds.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testPlanIssueIds",
                  "description": "(Optional) Filter by Test PlanIds.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Dataset",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getTest",
              "description": "Returns a Test by issueId.\n===\nThe query below returns a Test.\n<pre>\n{\n    <b>getTest</b> {\n        issueId\n        gherkin\n        jira(fields: [\"assignee\", \"reporter\"])\n    }\n}\n</pre>\n===\n===\nThe query below returns the Test with issue id **12345**.\n<pre>\n{\n    <b>getTest</b>(issueId: \"12345\") {\n        issueId\n        testType {\n            name\n            kind\n        }\n        steps {\n            id\n            data\n            action\n            result\n            attachments {\n                id\n                filename\n            }\n        }\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the id of the Test issue to be returned.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Test",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getTests",
              "description": "Returns multiple tests by jql, issue ids, project id or test type.\n===\nThe query below returns the first 100 tests.\n<pre>\n{\n    <b>getTests</b>(limit: 100) {\n        total\n        start\n        limit\n        results {\n            issueId\n            testType {\n                name\n                kind\n            }\n            jira(fields: [\"assignee\", \"reporter\"])\n        }\n    }\n}\n</pre>\n===\n===\nThe query below returns 10 tests that match the provided jql.\n<pre>\n{\n    <b>getTests</b>(jql: \"project = 'PC'\", limit: 10) {\n        total\n        start\n        limit\n        results {\n            issueId\n            testType {\n                name\n                kind\n            }\n            steps {\n                id\n                data\n                action\n                result\n                attachments {\n                    id\n                    filename\n                }\n                customfields {\n                    id\n                    value\n                }\n            }\n            jira(fields: [\"assignee\", \"reporter\"])\n        }\n    }\n}\n</pre>\n<b>Note</b>: If the jql returns more than 100 issues an error will be returned asking the user to refine the jql search.\n===",
              "args": [
                {
                  "name": "jql",
                  "description": "the jql that defines the search.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "issueIds",
                  "description": "the ids of the Test issues to be returned.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "projectId",
                  "description": "the id of the project of the Test issues to be returned.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testType",
                  "description": "the Test Type of the Test issues to be returned.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "TestTypeInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "modifiedSince",
                  "description": "all tests modified after this date will be returned",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Tests to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "folder",
                  "description": "the folder information required to filter the Test issues to be returned.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FolderSearchInput",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getExpandedTest",
              "description": "Returns a test (with the call test steps expanded) by issue id and version id.\n===\nThe query below returns the test version 2 of the test with the id \"12345\".\n<pre>\n{\n    <b>getExpandedTest</b>(issueId: \"12345\", testVersionId: \"2\") {\n        issueId\n        testType {\n            name\n            kind\n        }\n        steps {\n            parentTestIssueId\n            calledTestIssueId\n            id\n            data\n            action\n            result\n            attachments {\n                id\n                filename\n            }\n        }\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the id of the test issue to be returned.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "versionId",
                  "description": "the id of a Test version. If not given, will get the default Test version.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ExpandedTest",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getExpandedTests",
              "description": "Returns multiple tests (with the call test steps expanded) by jql, issue ids, project id or test type.\n===\nThe query below returns the first 100 tests.\n<pre>\n{\n    <b>getExpandedTests</b>(limit: 100) {\n        total\n        start\n        limit\n        results {\n            issueId\n            testType {\n                name\n                kind\n            }\n            jira(fields: [\"assignee\", \"reporter\"])\n            warnings\n        }\n    }\n}\n</pre>\n===\n===\nThe query below returns 10 tests that match the provided jql.\n<pre>\n{\n    <b>getExpandedTests</b>(jql: \"project = 'PC'\", limit: 10) {\n        total\n        start\n        limit\n        results {\n            issueId\n            testType {\n                name\n                kind\n            }\n            steps {\n                parentTestIssueId\n                calledTestIssueId\n                id\n                data\n                action\n                result\n                attachments {\n                    id\n                    filename\n                }\n                customfields {\n                    id\n                    value\n                }\n            }\n            jira(fields: [\"assignee\", \"reporter\"])\n            warnings\n        }\n    }\n}\n</pre>\n<b>Note</b>: If the jql returns more than 100 issues an error will be returned asking the user to refine the jql search.\n===\n===\nThe query below returns the tests of each test version.\n<pre>\n{\n    <b>getExpandedTests</b>(tests:[{ issueId:\"12345\", testVersionId: \"1\" }, { issueId:\"54321\", testVersionId: \"2\" }]) {\n        total\n        start\n        limit\n        results {\n            issueId\n            testType {\n                name\n                kind\n            }\n        }\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "jql",
                  "description": "the jql that defines the search.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "issueIds",
                  "description": "the ids of the Test issues with default Test versions to be returned. Cannot be used with <b>tests</b>.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "tests",
                  "description": "the ids of the Test versions and Tests. If not given Test Version, will get the default Test version. Cannot be used with <b>issueIds</b>.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "TestWithVersionInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "projectId",
                  "description": "the id of the project of the Test issues to be returned.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testType",
                  "description": "the Test Type of the Test issues to be returned.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "TestTypeInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "modifiedSince",
                  "description": "all tests modified after this date will be returned",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Tests to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "folder",
                  "description": "the folder information required to filter the Test issues to be returned.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FolderSearchInput",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ExpandedTestResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getCoverableIssue",
              "description": "Returns a Coverable Issue by issueId.\n===\nThe query below returns a Coverable Issue.\n<pre>\n{\n    <b>getCoverableIssue</b> {\n        issueId\n        jira(fields: [\"assignee\", \"reporter\"])\n        status {\n            name\n            description\n            color\n        }\n    }\n}\n</pre>\n===\n===\nThe query below returns the Coverable Issue with issue id **12345**.\n<pre>\n{\n    <b>getCoverableIssue</b>(issueId: \"12345\") {\n        issueId\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the id of the Coverable Issue to be returned.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CoverableIssue",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getCoverableIssues",
              "description": "Returns multiple coverable issues by jql or issue ids.\n===\nThe query below returns 10 coverable issues that match the provided jql.\n<pre>\n{\n    <b>getCoverableIssues</b>(limit: 10) {\n        total\n        start\n        limit\n        results {\n            issueId\n            jira(fields: [\"assignee\", \"reporter\"])\n            status {\n                name\n                description\n                color\n            }\n        }\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "jql",
                  "description": "the jql that defines the search.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "issueIds",
                  "description": "the ids of the Coverable Issues to be returned.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Tests to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CoverableIssueResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getPrecondition",
              "description": "Returns a Precondition by issue id.\n===\nThe Query below returns a Precondition.\n<pre>\n{\n    <b>getPrecondition</b> {\n        issueId\n        preconditionType {\n            kind\n            name\n        }\n    }\n}\n</pre>\n===\n===\nThe Query below returns the Precondition with issue id **12345**\n<pre>\n{\n    <b>getPrecondition</b>(issueId: \"12345\") {\n        issueId\n        definition\n        jira(fields: [\"assignee\", \"reporter\"])\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Precondition to be returned.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Precondition",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getPreconditions",
              "description": "Returns multiple Preconditions by jql, issueIds, projectId or Precondition Type.\n===\nThe Query below returns the first 100 Preconditions.\n<pre>\n{\n    <b>getPreconditions</b>(limit: 100) {\n        total\n        start\n        limit\n        results {\n            issueId\n            preconditionType {\n                name\n                kind\n            }\n            definition\n            jira(fields: [\"assignee\", \"reporter\"])\n        }\n    }\n}\n</pre>\n===\n===\nThe Query below returns 10 Preconditions that match the provided jql\n<pre>\n{\n    <b>getPreconditions</b>(jql: \"project = 'PC'\", limit: 10) {\n        results {\n            issueId\n            preconditionType {\n                name\n                kind\n            }\n            jira(fields: [\"assignee\", \"reporter\"])\n        }\n    }\n}\n</pre>\n<b>Note</b>: If the jql returns more than 100 issues an error will be returned asking the user to refine the jql search.\n===",
              "args": [
                {
                  "name": "jql",
                  "description": "the jql that defines the search.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "issueIds",
                  "description": "the ids of the Precondition issues to be returned.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "projectId",
                  "description": "the id of the project of the Precondition issues to be returned.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "preconditionType",
                  "description": "the Precondition Type of the Precondition issues to be returned.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "TestTypeInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Preconditions to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "modifiedSince",
                  "description": "all Preconditions modified after this date will be returned",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "folder",
                  "description": "the folder information required to filter the Test issues to be returned.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "PreconditionFolderSearchInput",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "PreconditionResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getTestSet",
              "description": "Returns a Test Set by issueId\n===\nThe query below returns a test set\n<pre>\n{\n    <b>getTestSet</b> {\n        issueId\n        projectId\n        jira(fields: [\"assignee\", \"reporter\"])\n    }\n}\n</pre>\n===\n===\nThe query below returns the test set with issue id **12345**\n<pre>\n{\n    <b>getTestSet</b>(issueId: \"12345\") {\n        issueId\n        tests(limit: 100) {\n            results {\n                issueId\n                testType {\n                    name\n                }\n            }\n        }\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the id of the Test Set issue to be returned.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestSet",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getTestSets",
              "description": "Returns multiple Test Sets by jql, issueIds or projectId.\n===\nThe query below returns the first 100 Test Sets.\n<pre>\n{\n    <b>getTestSets</b>(limit: 100) {\n        total\n        start\n        limit\n        results {\n            issueId\n            jira(fields: [\"assignee\", \"reporter\"])\n        }\n    }\n}\n</pre>\n===\n===\nThe query below returns 10 Test Sets that match the provided jql.\n<pre>\n{\n    <b>getTestSets</b>(jql: \"project = 'PC'\", limit: 10) {\n        total\n        start\n        limit\n        results {\n            issueId\n            tests(limit: 10) {\n                results {\n                    issueId\n                    testType {\n                        name\n                    }\n                }\n            }\n            jira(fields: [\"assignee\", \"reporter\"])\n        }\n    }\n}\n</pre>\n<b>Note</b>: If the jql returns more than 100 issues an error will be returned asking the user to refine the jql search.\n===",
              "args": [
                {
                  "name": "jql",
                  "description": "the jql that defines the search.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "issueIds",
                  "description": "the ids of the Test Set issues to be returned.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "projectId",
                  "description": "the id of the project of the Test Set issues to be returned.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Test Sets to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "modifiedSince",
                  "description": "all test sets modified after this date will be returned",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestSetResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getTestPlan",
              "description": "Returns a Test Plan by issue id.\n===\nThe Query below returns a Test Plan.\n<pre>\n{\n    <b>getTestPlan</b> {\n        issueId\n        projectId\n        jira(fields: [\"assignee\", \"reporter\"])\n    }\n}\n</pre>\n===\n===\nThe Query below returns the Test Plan with issue id **12345**\n<pre>\n{\n    <b>getTestPlan</b>(issueId: \"12345\") {\n        issueId\n        tests(limit: 100) {\n            results {\n                issueId\n                testType {\n                    name\n                }\n            }\n        }\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test Plan issue to be returned.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestPlan",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getTestPlans",
              "description": "Returns multiple Test Plans by jql, issue ids or project id.\n===\nThe Query below returns the first 100 Test Plans\n<pre>\n{\n    <b>getTestPlans</b>(limit: 100) {\n        total\n        start\n        limit\n        results {\n            issueId\n            jira(fields: [\"assignee\", \"reporter\"])\n        }\n    }\n}\n</pre>\n===\n===\nThe Query below returns 10 Test Plans that match the provided jql.\n<pre>\n{\n    <b>getTestPlans</b>(jql: \"project = 'PC'\", limit: 10) {\n        total\n        start\n        limit\n        results {\n            issueId\n            tests(limit: 10) {\n                total\n                start\n                limit\n                results {\n                    issueId\n                    testType {\n                        name\n                    }\n                }\n            }\n            jira(fields: [\"assignee\", \"reporter\"])\n        }\n    }\n}\n</pre>\n<b>Note</b>: If the jql returns more than 100 issues an error will be returned asking the user to refine the jql search.\n===",
              "args": [
                {
                  "name": "jql",
                  "description": "the jql that defines the search.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "issueIds",
                  "description": "the ids of the Test Plan issues to be returned.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "projectId",
                  "description": "the id of the project of the Test Plan issues to be returned.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Test Plans to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "modifiedSince",
                  "description": "all Test Plans modified after this date will be returned",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestPlanResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getTestExecution",
              "description": "Returns a Test Execution by issue id.\n===\nThe Query below returns a Test Execution.\n<pre>\n{\n    <b>getTestExecution</b> {\n        issueId\n        projectId\n        jira(fields: [\"assignee\", \"reporter\"])\n    }\n}\n</pre>\n===\n===\nThe Query below returns the Test Execution with issue id **12345**.\n<pre>\n{\n    <b>getTestExecution</b>(issueId: \"12345\") {\n        issueId\n        tests(limit: 100) {\n            total\n            start\n            limit\n            results {\n                issueId\n                testType {\n                    name\n                }\n            }\n        }\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the id of the Test Execution issue to be returned.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestExecution",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getTestExecutions",
              "description": "Returns multiple Test Executions by jql, issue ids or project id.\n===\nThe Query below returns the first 100 Test Executions\n<pre>\n{\n    <b>getTestExecutions</b>(limit: 100) {\n        total\n        start\n        limit\n        results {\n            issueId\n            jira(fields: [\"assignee\", \"reporter\"])\n        }\n    }\n}\n</pre>\n===\n===\nThe Query below returns 10 Test Executions that match the provided jql.\n<pre>\n{\n    <b>getTestExecutions</b>(jql: \"project = 'PC'\", limit: 10) {\n        total\n        start\n        limit\n        results {\n            issueId\n            tests(limit: 10) {\n                total\n                start\n                limit\n                results {\n                    issueId\n                    testType {\n                        name\n                    }\n                }\n            }\n            jira(fields: [\"assignee\", \"reporter\"])\n        }\n    }\n}\n</pre>\n<b>Note</b>: If the jql returns more than 100 issues an error will be returned asking the user to refine the jql search.\n===",
              "args": [
                {
                  "name": "jql",
                  "description": "the jql that defines the search.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "issueIds",
                  "description": "the ids of the Test Executions issues to be returned.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "projectId",
                  "description": "the id of the project of the Test Execution issues to be returned.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Test Executions to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "modifiedSince",
                  "description": "all Test Executions modified after this date will be returned",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestExecutionResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getTestRun",
              "description": "Returns a Test Run by Test issue id and Test Execution issue id.\n===\nThe Query below returns a Test Run\n<pre>\n{\n    <b>getTestRun</b>( testIssueId: \"11165\", testExecIssueId: \"11164\") {\n        id\n        status {\n            name\n            color\n            description\n        }\n        gherkin\n        examples {\n            id\n            status {\n                name\n                color\n                description\n            }\n        }\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "testIssueId",
                  "description": "the issue id of the Test of the Test Run.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testExecIssueId",
                  "description": "the issue id of the Test Execution of the Test Run.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestRun",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getTestRunById",
              "description": "Returns a Test Run by id.\n===\nThe Query below returns a Test Run.\n<pre>\n{\n    <b>getTestRunById</b>( id: \"5acc7ab0a3fe1b6fcdc3c737\") {\n        id\n        status {\n            name\n            color\n            description\n        }\n        steps {\n            action\n            data\n            result\n            attachments {\n                id\n                filename\n            }\n            status {\n                name\n                color\n            }\n        }\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "id",
                  "description": "the id of the Test Run.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestRun",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getTestRuns",
              "description": "Returns multiple Test Runs testIssueIds and/or testExecIssueIds.\n===\nThe query below returns the first 100 Test Runs that match the given testIssueIds and testExecIssueIds.\n<pre>\n{\n    <b>getTestRuns</b>( testIssueIds: [\"10001\", \"10002\"], testExecIssueIds: [\"10001\", \"10002\"], limit: 100 ) {\n        total\n        limit\n        start\n        results {\n            id\n            status {\n                name\n                color\n                description\n            }\n            gherkin\n            examples {\n                id\n                status {\n                name\n                color\n                description\n                }\n            }\n            test {\n                issueId\n            }\n            testExecution {\n                issueId\n            }\n        }\n    }\n}\n</pre>\n=== ===\nThe query below returns the first 100 Test Runs that match the given ids.\n<pre>\n{\n    <b>getTestRuns</b>( testIssueIds: [\"12345\"], limit: 100 ) {\n        total\n        limit\n        start\n        results {\n            id\n            status {\n                name\n                color\n                description\n            }\n            steps {\n                action\n                data\n                result\n                attachments {\n                    id\n                    filename\n                }\n                status {\n                    name\n                    color\n                }\n            }\n            test {\n                issueId\n            }\n            testExecution {\n                issueId\n            }\n        }\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "testIssueIds",
                  "description": "the issue ids of the Test of the Test Runs.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testExecIssueIds",
                  "description": "the issue ids of the Test Execution of the Test Runs.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testRunAssignees",
                  "description": "the user account ids of the assignee of the Test Runs.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Test Runs to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "modifiedSince",
                  "description": "all TestRuns modified after this date will be returned",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestRunResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getTestRunsById",
              "description": "Returns multiple Test Runs by id.\n===\nThe query below returns the first 100 Test Runs that match the given ids.\n<pre>\n{\n    <b>getTestRunsById</b>( ids: [\"5acc7ab0a3fe1b6fcdc3c737\"], limit: 10 ) {\n        total\n        limit\n        start\n        results {\n            id\n            status {\n                name\n                color\n                description\n            }\n            gherkin\n            examples {\n                id\n                status {\n                    name\n                    color\n                    description\n                }\n            }\n            test {\n                issueId\n            }\n            testExecution {\n                issueId\n            }\n        }\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "ids",
                  "description": "the ids of the Test Runs.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Test Runs to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestRunResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getStepStatus",
              "description": "Returns a Status by Test Run Step Status name.\n===\nThe Query below returns a Status\n<pre>\n{\n    <b>getStepStatus</b>( name: \"PASSED\") {\n        name\n        description\n        color\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "name",
                  "description": "the status name of test run step status",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "StepStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getStatus",
              "description": "Returns a Status by Test Run Status name.\n===\nThe Query below returns a Status\n<pre>\n{\n    <b>getStatus</b>( name: \"PASSED\") {\n        name\n        description\n        final\n        color\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "name",
                  "description": "the status name of Test Run Status",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Status",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getStatuses",
              "description": "Returns all Test Run Status.\n===\nThe Query below returns multiple Status\n<pre>\n{\n    <b>getStatuses</b> {\n        name\n        description\n        final\n        color\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "projectId",
                  "description": "the project id to get statuses for. If not provided, returns global statuses",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Status",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getStepStatuses",
              "description": "Returns all Test Run Step Status.\n===\nThe Query below returns multiple Status\n<pre>\n{\n    <b>getStepStatuses</b> {\n        name\n        description\n        color\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "projectId",
                  "description": "the project id to get step statuses for. If not provided, returns global step statuses",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "StepStatus",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getProjectSettings",
              "description": "Returns the Project Settings of a Project.\n===\nThe Query below returns multiple Status\n<pre>\n{\n    <b>getProjectSettings</b> ( projectIdOrKey: \"10000\" ) {\n        projectId,\n        testEnvironments,\n        testCoverageSettings {\n            coverableIssueTypeIds\n            epicIssuesRelation\n            issueSubTasksRelation\n            issueLinkTypeId\n            issueLinkTypeDirection\n        }\n        defectIssueTypes\n        testTypeSettings {\n            testTypes {\n                id\n                name\n                kind\n            }\n            defaultTestTypeId\n        }\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "projectIdOrKey",
                  "description": "Project Id",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectSettings",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "getIssueLinkTypes",
              "description": "Returns the Issue Link Types\n===\nThe Query below returns all Issue Link Types\n<pre>\n{\n    <b>getIssueLinkTypes</b> {\n        issueLinks {\n            id\n            name\n        }\n    }\n}\n</pre>\n===",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "IssueLinkType",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "String",
          "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FolderResults",
          "description": "",
          "fields": [
            {
              "name": "name",
              "description": "Folder name",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "Folder path",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issuesCount",
              "description": "Folder issues count",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testsCount",
              "description": "Folder tests count",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "preconditionsCount",
              "description": "Folder preconditions count",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "folders",
              "description": "Folder children",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Int",
          "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. ",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "JSON",
          "description": "The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Dataset",
          "description": "Dataset type\nRepresents a single Dataset entity with its metadata, parameters, and associated dataset rows.",
          "fields": [
            {
              "name": "id",
              "description": "Unique identifier of the Dataset.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testIssueId",
              "description": "The ID of the test issue associated with the Dataset.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testExecIssueId",
              "description": "The ID of the test execution issue associated with the Dataset.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testPlanIssueId",
              "description": "The ID of the test plan issue associated with the Dataset.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testStepId",
              "description": "The ID of the test step associated with the Dataset (only for test step datasets).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "callTestIssueId",
              "description": "The ID of the call test issue (only for test step datasets).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "parameters",
              "description": "Parameters of the Dataset, represented as an array of key-value pairs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Parameter",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "rows",
              "description": "The rows of the Dataset, representing combinatorial data.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "DatasetRow",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Parameter",
          "description": "Parameter type\nRepresents a single parameter in the Dataset.",
          "fields": [
            {
              "name": "name",
              "description": "The name of the parameter.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of the parameter.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectListId",
              "description": "The ID of the project list associated with the parameter.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "combinations",
              "description": "Indicates whether the parameter supports combinations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "listValues",
              "description": "The list of values for the parameter.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Boolean",
          "description": "The `Boolean` scalar type represents `true` or `false`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DatasetRow",
          "description": "DatasetRow type\nRepresents a single row in the Dataset, containing combinatorial data.",
          "fields": [
            {
              "name": "order",
              "description": "The order of the row in the Dataset.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "Values",
              "description": "The values of the row, stored String array.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Test",
          "description": "Test issue type",
          "fields": [
            {
              "name": "issueId",
              "description": "Issue id of the Test issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectId",
              "description": "Project id of the Test issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testType",
              "description": "Test type of the Test issue.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TestType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "steps",
              "description": "Step definition of the Test issue.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Step",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "unstructured",
              "description": "Unstructured definition of the Test issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "gherkin",
              "description": "Gherkin definition of the Test issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "folder",
              "description": "Test Repository folder of the Test.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Folder",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "dataset",
              "description": "Dataset linked to the Test issue.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Dataset",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scenarioType",
              "description": "Gherkin type of the Test issue.\nPossible values: 'scenario' or 'scenario_outline'.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "preconditions",
              "description": "List of Precondition associated with the Test issue.",
              "args": [
                {
                  "name": "issueIds",
                  "description": "the ids of the Preconditions.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Preconditions to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "PreconditionResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testSets",
              "description": "List of Test Sets associated with the Test issue.",
              "args": [
                {
                  "name": "issueIds",
                  "description": "the issue ids of the Test Sets",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Test Sets to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestSetResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testPlans",
              "description": "List of Test Plans associated with the Test issue.",
              "args": [
                {
                  "name": "issueIds",
                  "description": "the issue ids of the Test Plans",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Test Plans to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestPlanResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testExecutions",
              "description": "List of Test Executions associated with the Test issue.",
              "args": [
                {
                  "name": "issueIds",
                  "description": "the issue ids of the Test Executions",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Test Executions to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestExecutionResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testRuns",
              "description": "List of Test Runs for the Test issue",
              "args": [
                {
                  "name": "limit",
                  "description": "the maximum amount of Test Runs to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestRunResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "history",
              "description": "List of Xray History results for the issue",
              "args": [
                {
                  "name": "limit",
                  "description": "the maximum amount of entries to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "XrayHistoryResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testVersions",
              "description": "List of Test versions of the Test",
              "args": [
                {
                  "name": "limit",
                  "description": "the maximum amount of Test versions to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                },
                {
                  "name": "archived",
                  "description": "if should include archived Test versions in the result.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "true"
                },
                {
                  "name": "testTypeId",
                  "description": "to filter Test versions by Test Type",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestVersionResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "coverableIssues",
              "description": "List of Coverable Issues associated with the Test issue",
              "args": [
                {
                  "name": "issueIds",
                  "description": "the issue ids of the Coverable Issues",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Coverable Issues to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CoverableIssueResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "jira",
              "description": "Extra Jira information of the Test issue.",
              "args": [
                {
                  "name": "fields",
                  "description": "List of the fields to be displayed.\nCheck the field '**fields**' of [this](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-api-3-issue-issueIdOrKey-get) Jira endpoint for more information.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JSON",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "Status of the Test. This status can be calculated based on latest status, version or Test Plan.",
              "args": [
                {
                  "name": "environment",
                  "description": "the environment for which to calculate the for status.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "isFinal",
                  "description": "whether the final statuses has precedence over non-final.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "true"
                },
                {
                  "name": "version",
                  "description": "the version name for which to calculate the status for.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testPlan",
                  "description": "the Test Plan id for which to calculate the status for.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestStatusType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastModified",
              "description": "Date when the test was last modified.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestType",
          "description": "Test Type type",
          "fields": [
            {
              "name": "id",
              "description": "Id of the Test Type.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Name of the Test Type.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "kind",
              "description": "Kind of the Test Type.\nPossible values are \"Gherkin\", \"Steps\" or \"Unstructured\".",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Step",
          "description": "Test Step type",
          "fields": [
            {
              "name": "id",
              "description": "Id of the Step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "action",
              "description": "Action of the Step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "data",
              "description": "Data of the Step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "result",
              "description": "Result of the Step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attachments",
              "description": "Attachments of the Step.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Attachment",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customFields",
              "description": "Custom Fields of the Step.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CustomStepField",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "callTestIssueId",
              "description": "The issue id of the test being called in the step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Attachment",
          "description": "Step Attachment type",
          "fields": [
            {
              "name": "id",
              "description": "Id of the attachment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "filename",
              "description": "Filename of the attachment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "storedInJira",
              "description": "If the file is stored in Jira.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "downloadLink",
              "description": "Download link of the attachment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CustomStepField",
          "description": "Step CustomField type",
          "fields": [
            {
              "name": "id",
              "description": "Id of the Custom Field.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Name of the Custom Field.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "Value of the Custom Field.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Folder",
          "description": "Test Repository folder type.",
          "fields": [
            {
              "name": "name",
              "description": "Folder name",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "Folder path",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PreconditionResults",
          "description": "Precondition Results type",
          "fields": [
            {
              "name": "total",
              "description": "Total amount of issues.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "start",
              "description": "Index of the first item to return in the page of results (page offset).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "limit",
              "description": "Maximum amount of Preconditions to be returned. The maximum is 100.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "results",
              "description": "Precondition issue results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Precondition",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Precondition",
          "description": "Precondition issue type",
          "fields": [
            {
              "name": "issueId",
              "description": "Id of the Precondition issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectId",
              "description": "Project id of the Precondition issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "preconditionType",
              "description": "Precondition Type of the Precondition issue.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TestType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "definition",
              "description": "Definition of the Precondition issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tests",
              "description": "List of the Tests associated with the Precondition issue.",
              "args": [
                {
                  "name": "issueIds",
                  "description": "the issue ids of the Tests.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Tests to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testVersions",
              "description": "List of the Test versions associated with the Precondition issue.",
              "args": [
                {
                  "name": "limit",
                  "description": "the maximum amount of Test versions to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                },
                {
                  "name": "archived",
                  "description": "if should include archived Test versions in the result.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "true"
                },
                {
                  "name": "testTypeId",
                  "description": "to filter Test versions by Test Type",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestVersionResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "history",
              "description": "List of Xray History results for the issue",
              "args": [
                {
                  "name": "limit",
                  "description": "the maximum amount of entries to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "XrayHistoryResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "jira",
              "description": "Extra Jira information of the Precondition Issue.",
              "args": [
                {
                  "name": "fields",
                  "description": "list of the fields to be displayed.\nCheck the field '**fields**' of [this](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-api-3-issue-issueIdOrKey-get) Jira endpoint for more information.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastModified",
              "description": "Date when the precondition was last modified.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "folder",
              "description": "Test Repository folder of the Precondition.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Folder",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestResults",
          "description": "Test Results type",
          "fields": [
            {
              "name": "total",
              "description": "Total amount of issues.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "start",
              "description": "The index of the first item to return in the page of results (page offset).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "limit",
              "description": "The maximum amount of Tests to be returned. The maximum is 100.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "results",
              "description": "Test issue results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Test",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warnings",
              "description": "Warnings generated if you have a invalid Test",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestVersionResults",
          "description": "Test version results type",
          "fields": [
            {
              "name": "total",
              "description": "Total amount of Test versions.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "start",
              "description": "The index of the first item to return in the page of results (page offset).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "limit",
              "description": "The maximum amount of Test versions to be returned. The maximum is 100.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "results",
              "description": "Test version results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TestVersion",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestVersion",
          "description": "",
          "fields": [
            {
              "name": "id",
              "description": "Number of the Test version.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Name of the Test version.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "default",
              "description": "If is the default Test version.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "archived",
              "description": "If is an archived Test version.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testType",
              "description": "Test type of the Test version.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TestType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "steps",
              "description": "Step definition of the Test version.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Step",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "unstructured",
              "description": "Unstructured definition of the Test version.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "gherkin",
              "description": "Gherkin definition of the Test version.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scenarioType",
              "description": "Gherkin type of the Test version.\nPossible values: 'scenario' or 'scenario_outline'.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "test",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Test",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "preconditions",
              "description": "",
              "args": [
                {
                  "name": "issueIds",
                  "description": "the ids of the Preconditions.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Preconditions to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "PreconditionResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testExecutions",
              "description": "List of Test Executions associated with the Test version.",
              "args": [
                {
                  "name": "issueIds",
                  "description": "the issue ids of the Test Executions",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Test Executions to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestExecutionResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testRuns",
              "description": "",
              "args": [
                {
                  "name": "limit",
                  "description": "the maximum amount of Test Runs to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestRunResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastModified",
              "description": "Date when the Test version was last modified.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestExecutionResults",
          "description": "Test Execution Results Type",
          "fields": [
            {
              "name": "total",
              "description": "Total amount of issues.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "start",
              "description": "Index of the first item to return in the page of results (page offset).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "limit",
              "description": "Maximum amount of Test Executions to be returned. The maximum is 100.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "results",
              "description": "Test Execution issue results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TestExecution",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestExecution",
          "description": "Test Execution issue type",
          "fields": [
            {
              "name": "issueId",
              "description": "Id of the Test Execution issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectId",
              "description": "Project id of the Test Execution issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testEnvironments",
              "description": "Test Environments of the Test Execution.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tests",
              "description": "List of Tests associated with the Test Execution Issue.",
              "args": [
                {
                  "name": "issueIds",
                  "description": "the issue ids of the Tests.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of tests to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testPlans",
              "description": "List of Test Plans associated with the Test Execution Issue.",
              "args": [
                {
                  "name": "issueIds",
                  "description": "Ids of the Test Plans.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Test Plans to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestPlanResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testRuns",
              "description": "List of Test Runs for the Test Execution Issue.",
              "args": [
                {
                  "name": "limit",
                  "description": "the maximum amount of tests to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestRunResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "history",
              "description": "List of Xray History results for the issue",
              "args": [
                {
                  "name": "limit",
                  "description": "the maximum amount of entries to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "XrayHistoryResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "jira",
              "description": "Extra Jira information of the Test Execution Issue.",
              "args": [
                {
                  "name": "fields",
                  "description": "List of the fields to be displayed.\nCheck the field '**fields**' of [this](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-api-3-issue-issueIdOrKey-get) Jira endpoint for more information.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastModified",
              "description": "Date when the test exec was last modified.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestPlanResults",
          "description": "Test Plan Results type",
          "fields": [
            {
              "name": "total",
              "description": "Total amount of issues.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "start",
              "description": "Index of the first item to return in the page of results (page offset).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "limit",
              "description": "Maximum amount of Test Plans to be returned. The maximum is 100.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "results",
              "description": "Test Plan issue results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TestPlan",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warnings",
              "description": "Warnings generated during the operation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestPlan",
          "description": "Test Plan issue type",
          "fields": [
            {
              "name": "issueId",
              "description": "Id of the Test Plan issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectId",
              "description": "Project id of the Test Plan issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tests",
              "description": "List of Tests associated with the Test Plan issue.",
              "args": [
                {
                  "name": "issueIds",
                  "description": "the issue ids of the Tests.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of tests to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testExecutions",
              "description": "List of Test Executions associated with the Test Plan issue.",
              "args": [
                {
                  "name": "issueIds",
                  "description": "issue ids of the Test Executions.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of tests to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestExecutionResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "history",
              "description": "List of Xray History results for the issue",
              "args": [
                {
                  "name": "limit",
                  "description": "the maximum amount of entries to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "XrayHistoryResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "jira",
              "description": "Extra Jira information of the Test Plan issue.",
              "args": [
                {
                  "name": "fields",
                  "description": "list of the fields to be displayed.\nCheck the field '**fields**' of [this](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-api-3-issue-issueIdOrKey-get) Jira endpoint for more information.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "folders",
              "description": "Folder structure of the Test Plan.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FolderResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastModified",
              "description": "Date when the test plan was last modified.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "XrayHistoryResults",
          "description": "Xray History Results type",
          "fields": [
            {
              "name": "total",
              "description": "Total amount of issues.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "start",
              "description": "Index of the first item to return in the page of results (page offset).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "limit",
              "description": "Maximum amount of History results to be returned. The maximum is 100.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "results",
              "description": "Precondition issue results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "XrayHistoryEntry",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "XrayHistoryEntry",
          "description": "Xray History Entry type",
          "fields": [
            {
              "name": "version",
              "description": "Test Version that the changes refer to (if applicable).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "user",
              "description": "User that performed the change(s).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "date",
              "description": "Date of change(s).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "action",
              "description": "Action performed.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changes",
              "description": "Details of the change(s).",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Changes",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Changes",
          "description": "Xray History Changes type",
          "fields": [
            {
              "name": "field",
              "description": "Field the change refers to.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "change",
              "description": "Change details.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestRunResults",
          "description": "Test Run Results type",
          "fields": [
            {
              "name": "total",
              "description": "Total amount of Test Runs.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "start",
              "description": "The index of the first item to return in the page of results (page offset).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "limit",
              "description": "The maximum amount of Test Runs to be returned. The maximum is 100.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "results",
              "description": "Test Run results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TestRun",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestRun",
          "description": "Test Run type",
          "fields": [
            {
              "name": "id",
              "description": "Id of the Test Run.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "Status of the Test Run.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Status",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "unstructured",
              "description": "Generic definition of the Test issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "gherkin",
              "description": "Cucumber definition of the Test issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scenarioType",
              "description": "Cucumber Type definition of the Test Run.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "comment",
              "description": "Comment definition of the Test Run.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startedOn",
              "description": "Started On date of the Test Run.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "evidence",
              "description": "Evidence of the Test Run.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Evidence",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "defects",
              "description": "Defects of the Test Run.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "steps",
              "description": "Step definition of the Test Run.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TestRunStep",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "examples",
              "description": "Examples of the Test Run.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Example",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "results",
              "description": "Results of the Test Run.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Result",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testType",
              "description": "Test Type of the Test Run.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TestType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "executedById",
              "description": "User's account id that executed the Test Run.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "assigneeId",
              "description": "User's account id assigned to the Test Run. This is user assigned to the Test Run, not taking into account the assignee of the test execution.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "finishedOn",
              "description": "Finished On date of the Test Run.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "preconditions",
              "description": "Preconditions of the Test Run.",
              "args": [
                {
                  "name": "limit",
                  "description": "the maximum amount of Preconditions to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestRunPreconditionResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "test",
              "description": "Test of the Test Run.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Test",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testVersion",
              "description": "Test version of the Test Run.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TestVersion",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testExecution",
              "description": "Test Execution of the Test Run.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TestExecution",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastModified",
              "description": "Date when the test run was last modified.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customFields",
              "description": "Custom Fields of the Test Run.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TestRunCustomFieldValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "parameters",
              "description": "Parameters of the Test Run.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TestRunParameter",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "iterations",
              "description": "Iterations of the Test Run.",
              "args": [
                {
                  "name": "limit",
                  "description": "the maximum amount of iterations to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestRunIterationResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Status",
          "description": "Status Type",
          "fields": [
            {
              "name": "name",
              "description": "Name of the Status.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "Description of the Status.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "final",
              "description": "Whether the Status is final or not.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "color",
              "description": "Color of the Status.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "coverageStatus",
              "description": "Coverage mapping of the Status.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Evidence",
          "description": "Evidence Type",
          "fields": [
            {
              "name": "id",
              "description": "Id of the Evidence.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "filename",
              "description": "Filename of the Evidence.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "storedInJira",
              "description": "If file is stored in Jira",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "downloadLink",
              "description": "Download link of the Evidence.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "size",
              "description": "File size in bytes.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdOn",
              "description": "Evidence creation timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestRunStep",
          "description": "Test Run Step Type",
          "fields": [
            {
              "name": "id",
              "description": "Id of the Test Run Step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "Status of the Test Run Step.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "StepStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "action",
              "description": "Action of the Test Run Step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "data",
              "description": "Data of the Test Run Step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "result",
              "description": "Result of the Test Run Step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customFields",
              "description": "Custom Fields of the Test Run Step.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TestRunCustomStepField",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "comment",
              "description": "Comment of the Test Run Step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "evidence",
              "description": "Evidence of the Test Run Step.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Evidence",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attachments",
              "description": "Attachments of the Test Run Step.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Attachment",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "defects",
              "description": "Defects of the Test Run Step.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "actualResult",
              "description": "Actual Result of the Test Run Step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "StepStatus",
          "description": "Step Status Type",
          "fields": [
            {
              "name": "name",
              "description": "Name of the Status.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "Description of the Status.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "color",
              "description": "Color of the Status.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testStatus",
              "description": "The test status to which the step status is mapped to.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Status",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestRunCustomStepField",
          "description": "Step CustomField type",
          "fields": [
            {
              "name": "id",
              "description": "Id of the Custom Field.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Name of the Custom Field.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "Value of the Custom Field.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Example",
          "description": "Example Type",
          "fields": [
            {
              "name": "id",
              "description": "Id of the Example.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "Status of the Example.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "StepStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "duration",
              "description": "Duration of the Example.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Float",
          "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point). ",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Result",
          "description": "Result Type",
          "fields": [
            {
              "name": "log",
              "description": "Output if exist an error or a failure (JUNIT, XUNIT, NUNIT, TESTNG)",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "examples",
              "description": "Examples of the Result.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ResultsExample",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "wasImported",
              "description": "Whether or not the Result was imported.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "duration",
              "description": "Duration of the Result.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "Status of the Result.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "StepStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Name of the Result.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hooks",
              "description": "Hooks of the Results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ResultsStep",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "backgrounds",
              "description": "Backgrounds of the Results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ResultsStep",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "steps",
              "description": "Steps of the Results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ResultsStep",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ResultsExample",
          "description": "Results Example Type",
          "fields": [
            {
              "name": "wasImported",
              "description": "Whether or not the Result was imported.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "duration",
              "description": "Duration of the Result.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "Status of the Result.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "StepStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hooks",
              "description": "Hooks of the Results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ResultsStep",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "backgrounds",
              "description": "Backgrounds of the Results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ResultsStep",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "steps",
              "description": "Steps of the Results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ResultsStep",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ResultsStep",
          "description": "Results Step",
          "fields": [
            {
              "name": "keyword",
              "description": "If a gherkin step, keyword of the gherkin step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Name of the step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "embeddings",
              "description": "Embeddings of the step.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ResultsEmbedding",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "duration",
              "description": "Duration of the step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "error",
              "description": "Error of the step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "Status of the step.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "StepStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "log",
              "description": "If a Robot step, output of the Robot step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ResultsEmbedding",
          "description": "Results Embedding",
          "fields": [
            {
              "name": "filename",
              "description": "Filename of the Embedding.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mimeType",
              "description": "Mime Type of the Embedding.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "data",
              "description": "Data of the Embedding. Base64 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "downloadLink",
              "description": "Link to download the embedding if no data is present",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestRunPreconditionResults",
          "description": "Precondition Results type",
          "fields": [
            {
              "name": "total",
              "description": "Total amount of preconditions.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "start",
              "description": "Index of the first item to return in the page of results (page offset).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "limit",
              "description": "Maximum amount of Preconditions to be returned. The maximum is 100.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "results",
              "description": "Precondition results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TestRunPrecondition",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestRunPrecondition",
          "description": "Test Run Precondition type",
          "fields": [
            {
              "name": "preconditionRef",
              "description": "Precondition of the Test Run.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Precondition",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "definition",
              "description": "Precondition definition.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestRunCustomFieldValue",
          "description": "Custom Fields Type",
          "fields": [
            {
              "name": "id",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "values",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestRunParameter",
          "description": "Test Run parameter type",
          "fields": [
            {
              "name": "name",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestRunIterationResults",
          "description": "Test Run iterations results type",
          "fields": [
            {
              "name": "total",
              "description": "Total amount of iterations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "start",
              "description": "Index of the first item to return in the page of results (page offset).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "limit",
              "description": "Maximum amount of iterations to be returned. The maximum is 100.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "results",
              "description": "Iteration results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TestRunIteration",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestRunIteration",
          "description": "Test Run iteration type",
          "fields": [
            {
              "name": "rank",
              "description": "Rank of the iteration.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "parameters",
              "description": "Parameters of the iteration.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TestRunParameter",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "Status of the iteration.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "StepStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "stepResults",
              "description": "Step results of the iteration.",
              "args": [
                {
                  "name": "limit",
                  "description": "the maximum amount of step results to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestRunIterationStepResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestRunIterationStepResults",
          "description": "Test Run iteration step results results type",
          "fields": [
            {
              "name": "total",
              "description": "Total amount of steps.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "start",
              "description": "Index of the first item to return in the page of results (page offset).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "limit",
              "description": "Maximum amount of step results to be returned. The maximum is 100.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "results",
              "description": "Step results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TestRunIterationStepResult",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestRunIterationStepResult",
          "description": "Test Run iteration step result type",
          "fields": [
            {
              "name": "id",
              "description": "Id of the Test Run step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "Status of the Test Run step.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "StepStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "comment",
              "description": "Comment of the Test Run step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "evidence",
              "description": "Evidence of the Test Run step.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Evidence",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "defects",
              "description": "Defects of the Test Run step.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "actualResult",
              "description": "Actual Result of the Test Run step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestSetResults",
          "description": "Test Set Results",
          "fields": [
            {
              "name": "total",
              "description": "Total amount of issues.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "start",
              "description": "Index of the first item to return in the page of results (page offset).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "limit",
              "description": "Maximum amount of test sets to be returned. The maximum is 100.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "results",
              "description": "Test Set issue results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TestSet",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestSet",
          "description": "Test Set type",
          "fields": [
            {
              "name": "issueId",
              "description": "Issue id of the Test Set Issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectId",
              "description": "Project id of the Test Set Issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tests",
              "description": "List of Tests associated with the Test Set Issue.",
              "args": [
                {
                  "name": "issueIds",
                  "description": "Ids of the Tests.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "Maximum amount of tests to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "Index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "history",
              "description": "List of Xray History results for the issue",
              "args": [
                {
                  "name": "limit",
                  "description": "the maximum amount of entries to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "XrayHistoryResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "jira",
              "description": "Extra Jira information of the Test Set Issue.",
              "args": [
                {
                  "name": "fields",
                  "description": "List of the fields to be displayed.\nCheck the field '**fields**' of [this](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-api-3-issue-issueIdOrKey-get) Jira endpoint for more information.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastModified",
              "description": "Date when the test set was last modified.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CoverableIssueResults",
          "description": "Coverable Issue Results type",
          "fields": [
            {
              "name": "total",
              "description": "Total amount of issues.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "start",
              "description": "The index of the first item to return in the page of results (page offset).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "limit",
              "description": "The maximum amount of Coverable Issues to be returned. The maximum is 100.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "results",
              "description": "Test issue results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CoverableIssue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warnings",
              "description": "Warnings generated if you have a invalid Coverable Issue",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CoverableIssue",
          "description": "",
          "fields": [
            {
              "name": "issueId",
              "description": "Issue id of the Coverable Issue Issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tests",
              "description": "List of Tests associated with the Coverable Issue issue.\n\nArguments\nissueIds: the issue ids of the Tests.\nlimit: the maximum amount of tests to be returned. The maximum is 100.\nstart: the index of the first item to return in the page of results (page offset).",
              "args": [
                {
                  "name": "issueIds",
                  "description": "",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "jira",
              "description": "Extra Jira information of the Coverable issue.\n\nArguments\nfields: List of the fields to be displayed.",
              "args": [
                {
                  "name": "fields",
                  "description": "",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JSON",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "Test Coverage Status of the Coverable Issue. This status can be calculated based on latest status, version or Test Plan.\n\nArguments\nenvironment: the environment for which to calculate the for status.\nisFinal: whether the final statuses has precedence over non-final.\nversion: the version name for which to calculate the status for.\ntestPlan: the Test Plan issue id for which to calculate the status for.",
              "args": [
                {
                  "name": "environment",
                  "description": "",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "isFinal",
                  "description": "",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "version",
                  "description": "",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testPlan",
                  "description": "",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CoverageStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CoverageStatus",
          "description": "",
          "fields": [
            {
              "name": "name",
              "description": "Name of the Coverage Status",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "Description of the Coverage Status",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "color",
              "description": "Color of the Coverage Status",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TestStatusType",
          "description": "Test Status Type",
          "fields": [
            {
              "name": "name",
              "description": "Name of the Test Status.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "Description of the Test Status.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "final",
              "description": "Whether the status is final or not.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "color",
              "description": "Color of the Test Status.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "TestTypeInput",
          "description": "Test Type input",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Id of the Test Type.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "name",
              "description": "Name of the Test Type.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "kind",
              "description": "Kind of the Test Type.\nPossible values are \"Gherkin\", \"Steps\" or \"Unstructured\".",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "FolderSearchInput",
          "description": "Folder Search input",
          "fields": null,
          "inputFields": [
            {
              "name": "path",
              "description": "Path of the Folder.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "testPlanId",
              "description": "Test Plan id of the Folder.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "includeDescendants",
              "description": "Whether descendant folders should be included in the search.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ExpandedTest",
          "description": "Expaded test issue type",
          "fields": [
            {
              "name": "issueId",
              "description": "Issue id of the Test issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "versionId",
              "description": "Version id of the Test issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectId",
              "description": "Project id of the Test issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testType",
              "description": "Test type of the Test issue.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TestType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "unstructured",
              "description": "Unstructured definition of the Test issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "gherkin",
              "description": "Gherkin definition of the Test issue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "folder",
              "description": "Test Repository folder of the Test.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Folder",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "dataset",
              "description": "Dataset linked to the Test issue.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Dataset",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scenarioType",
              "description": "Gherkin type of the Test issue.\nPossible values: 'scenario' or 'scenario_outline'.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "preconditions",
              "description": "List of Precondition associated with the Test issue.",
              "args": [
                {
                  "name": "issueIds",
                  "description": "the ids of the Preconditions.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Preconditions to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "PreconditionResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testSets",
              "description": "List of Test Sets associated with the Test issue.",
              "args": [
                {
                  "name": "issueIds",
                  "description": "the issue ids of the Test Sets",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Test Sets to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestSetResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testPlans",
              "description": "List of Test Plans associated with the Test issue.",
              "args": [
                {
                  "name": "issueIds",
                  "description": "the issue ids of the Test Plans",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Test Plans to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestPlanResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testExecutions",
              "description": "List of Test Executions associated with the Test issue.",
              "args": [
                {
                  "name": "issueIds",
                  "description": "the issue ids of the Test Executions",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Test Executions to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestExecutionResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testRuns",
              "description": "List of Test Runs for the Test issue",
              "args": [
                {
                  "name": "limit",
                  "description": "the maximum amount of Test Runs to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestRunResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testVersions",
              "description": "List of Test versions of the Test",
              "args": [
                {
                  "name": "limit",
                  "description": "the maximum amount of Test versions to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                },
                {
                  "name": "archived",
                  "description": "if should include archived Test versions in the result.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "true"
                },
                {
                  "name": "testTypeId",
                  "description": "to filter Test versions by Test Type",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestVersionResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "history",
              "description": "List of Xray History results for the issue",
              "args": [
                {
                  "name": "limit",
                  "description": "the maximum amount of entries to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "XrayHistoryResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "coverableIssues",
              "description": "List of Coverable Issues associated with the Test issue",
              "args": [
                {
                  "name": "issueIds",
                  "description": "the issue ids of the Coverable Issues",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "limit",
                  "description": "the maximum amount of Coverable Issues to be returned. The maximum is 100.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "start",
                  "description": "the index of the first item to return in the page of results (page offset).",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "0"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CoverableIssueResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "jira",
              "description": "Extra Jira information of the Test issue.",
              "args": [
                {
                  "name": "fields",
                  "description": "List of the fields to be displayed.\nCheck the field '**fields**' of [this](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-api-3-issue-issueIdOrKey-get) Jira endpoint for more information.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JSON",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "Status of the Test. This status can be calculated based on latest status, version or Test Plan.",
              "args": [
                {
                  "name": "environment",
                  "description": "the environment for which to calculate the for status.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "isFinal",
                  "description": "whether the final statuses has precedence over non-final.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "true"
                },
                {
                  "name": "version",
                  "description": "the version name for which to calculate the status for.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testPlan",
                  "description": "the Test Plan id for which to calculate the status for.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TestStatusType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastModified",
              "description": "Date when the test was last modified.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "steps",
              "description": "Expanded step definition of the test.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ExpandedStep",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warnings",
              "description": "Warnings generated while expanding the test steps.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ExpandedStep",
          "description": "Expanded test step type",
          "fields": [
            {
              "name": "id",
              "description": "Id of the Step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "action",
              "description": "Action of the Step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "data",
              "description": "Data of the Step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "result",
              "description": "Result of the Step.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attachments",
              "description": "Attachments of the Step.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Attachment",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customFields",
              "description": "Custom Fields of the Step.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CustomStepField",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "calledTestIssueId",
              "description": "The issue id of the called test with the step",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "parentTestIssueId",
              "description": "The issue id of the test calling the step",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "TestWithVersionInput",
          "description": "Test with Version input",
          "fields": null,
          "inputFields": [
            {
              "name": "issueId",
              "description": "Issue id of the Test issue.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "versionId",
              "description": "Test Version id of the Test Issue",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ExpandedTestResults",
          "description": "Expanded tests results type",
          "fields": [
            {
              "name": "total",
              "description": "Total amount of issues.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "start",
              "description": "The index of the first item to return in the page of results (page offset).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "limit",
              "description": "The maximum amount of Tests to be returned. The maximum is 100.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "results",
              "description": "Expanded test issue results.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ExpandedTest",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PreconditionFolderSearchInput",
          "description": "Folder Search input",
          "fields": null,
          "inputFields": [
            {
              "name": "path",
              "description": "Path of the Folder.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "includeDescendants",
              "description": "Whether descendant folders should be included in the search.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectSettings",
          "description": "Project Settings type",
          "fields": [
            {
              "name": "projectId",
              "description": "Project id.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testEnvironments",
              "description": "Test Environments.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testCoverageSettings",
              "description": "Test Coverage Settings.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectSettingsTestCoverage",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "defectIssueTypes",
              "description": "Defect Issue Types.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testTypeSettings",
              "description": "Test Type Settings.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectSettingsTestType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testStepSettings",
              "description": "Test Step Settings.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectSettingsTestStepSettings",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testRunCustomFieldSettings",
              "description": "Test Run Custom Fields Settings.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectSettingsTestRunCustomFields",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectSettingsTestCoverage",
          "description": "Project Test Coverage Settings type",
          "fields": [
            {
              "name": "coverableIssueTypeIds",
              "description": "Coverable issue type ids",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "epicIssuesRelation",
              "description": "Epic - Issues(Stories) relation",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issueSubTasksRelation",
              "description": "Issue - Sub-tasks relation",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issueLinkTypeId",
              "description": "Issue Link Type Id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issueLinkTypeDirection",
              "description": "Issue Link Type Direction",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectSettingsTestType",
          "description": "Project Test Type Settings type",
          "fields": [
            {
              "name": "testTypes",
              "description": "Test Types",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TestType",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "defaultTestTypeId",
              "description": "Default Test Type Id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectSettingsTestStepSettings",
          "description": "Project Test Step Settings type",
          "fields": [
            {
              "name": "fields",
              "description": "Fields",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectSettingsTestStepField",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectSettingsTestStepField",
          "description": "Project Test Step Field Settings type",
          "fields": [
            {
              "name": "id",
              "description": "Id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Name",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Type",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "required",
              "description": "Is the field required",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "disabled",
              "description": "Is the field disabled",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "values",
              "description": "Values",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectSettingsTestRunCustomFields",
          "description": "Project Test Run Custom Field Field Settings type",
          "fields": [
            {
              "name": "fields",
              "description": "Fields",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectSettingsTestRunCustomField",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectSettingsTestRunCustomField",
          "description": "Project Test Run Custom Field Settings type",
          "fields": [
            {
              "name": "id",
              "description": "Id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Name",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Type",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "required",
              "description": "Is the field required",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "values",
              "description": "Values",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "IssueLinkType",
          "description": "Issue Link Type type",
          "fields": [
            {
              "name": "name",
              "description": "Name of Issue Link Type",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "Id of Issue Link Type",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Mutation",
          "description": "",
          "fields": [
            {
              "name": "createFolder",
              "description": "Mutation used to create a new Folder.\n===\nThe mutation below will create a new Folder.\n<pre>\nmutation {\n    <b>createFolder</b>(\n        projectId: \"10000\",\n        path: \"/generic\"\n    ) {\n        folder {\n            name\n            path\n            testsCount\n        }\n        warnings\n    }\n}\n</pre>\n===\n===\nThe mutation below will create a new Folder and add tests to it.\n<pre>\nmutation {\n    <b>createFolder</b>(\n        projectId: \"10000\",\n        path: \"/generic\",\n        testIssueIds: [\"10002\",\"12324\",\"12345\"]\n    ) {\n        folder {\n            name\n            path\n            testsCount\n        }\n        warnings\n    }\n}\n</pre>\n===\n===\nThe mutation below will create a new Folder and add tests and/or preconditions to it.\n<pre>\nmutation {\n    <b>createFolder</b>(\n        projectId: \"10000\",\n        path: \"/generic\",\n        issueIds: [\"10002\",\"12324\",\"12345\"]\n    ) {\n        folder {\n            name\n            path\n            testsCount\n            issuesCount\n            preconditionsCount\n        }\n        warnings\n    }\n}\n</pre>\n<b>Note</b>: Use createFolder with <b>testIssueIds</b> (in which all ids must be from Tests)\nOR with <b>issueIds</b> (which can be eiter Test ids and/or Precondition ids), but not with both.\n===",
              "args": [
                {
                  "name": "projectId",
                  "description": "the project id of the Folder.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testPlanId",
                  "description": "the Test Plan id of the Folder.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "path",
                  "description": "the path of the Folder.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testIssueIds",
                  "description": "the Test ids to add to the Folder.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "issueIds",
                  "description": "the Test or Precondition ids to add to the Folder.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ActionFolderResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteFolder",
              "description": "Mutation used to delete a Folder.\n===\nThe mutation below will delete a Folder.\n<pre>\nmutation {\n    <b>deleteFolder</b>(\n        projectId: \"10000\",\n        path: \"/generic\"\n    )\n}\n</pre>\n===",
              "args": [
                {
                  "name": "projectId",
                  "description": "the project id of the Folder.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testPlanId",
                  "description": "the Test Plan id of the Folder.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "path",
                  "description": "the path of the Folder.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "renameFolder",
              "description": "Mutation used to rename a Folder.\n===\nThe mutation below will rename a Folder.\n<pre>\nmutation {\n    <b>renameFolder</b>(\n        projectId: \"10000\",\n        path: \"/generic\",\n        newName: \"Junit\"\n    ) {\n        folder {\n            name\n            path\n            testsCount\n        }\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "projectId",
                  "description": "the project id of the Folder.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testPlanId",
                  "description": "the Test Plan id of the Folder.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "path",
                  "description": "the path of the Folder.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "newName",
                  "description": "the new name of the Folder.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ActionFolderResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "moveFolder",
              "description": "Mutation used to move a Folder.\n===\nThe mutation below will move a Folder.\n<pre>\nmutation {\n    <b>moveFolder</b>(\n        projectId: \"10000\",\n        path: \"/generic\",\n        destinationPath: \"/testType\"\n    ) {\n        folder {\n            name\n            path\n            testsCount\n        }\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "projectId",
                  "description": "the project id of the Folder.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testPlanId",
                  "description": "the Test Plan id of the Folder.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "path",
                  "description": "the path of the Folder.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "destinationPath",
                  "description": "the new path of the Folder.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "index",
                  "description": "the index of where to insert the folder in.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ActionFolderResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addTestsToFolder",
              "description": "Mutation used to add tests to a Folder.\n===\nThe mutation below will add tests to a Folder.\n<pre>\nmutation {\n    <b>addTestsToFolder</b>(\n        projectId: \"10000\",\n        path: \"/generic\",\n        testIssueIds: [\"10002\",\"12324\",\"12345\"]\n    ) {\n        folder {\n            name\n            path\n            testsCount\n        }\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "projectId",
                  "description": "the project id of the Folder.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testPlanId",
                  "description": "the Test Plan id of the Folder.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "path",
                  "description": "the path of the Folder.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testIssueIds",
                  "description": "the Test ids to add to the Folder.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "index",
                  "description": "the index of where to insert the Tests in.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ActionFolderResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addIssuesToFolder",
              "description": "Mutation used to add issues to a Folder.\n===\nThe mutation below will add issues to a Folder.\n<pre>\nmutation {\n    <b>addIssuesToFolder</b>(\n        projectId: \"10000\",\n        path: \"/generic\",\n        issueIds: [\"10002\",\"12324\",\"12345\"]\n    ) {\n        folder {\n            name\n            path\n            issuesCount\n        }\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "projectId",
                  "description": "the project id of the Folder.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "path",
                  "description": "the path of the Folder.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "issueIds",
                  "description": "the Test or Precondition ids to add to the Folder.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "index",
                  "description": "the index of where to insert the Tests in.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ActionFolderResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeTestsFromFolder",
              "description": "Mutation used to remove tests from Folder.\n===\nThe mutation below will remove tests from a Folder.\n<pre>\nmutation {\n    <b>removeTestsFromFolder</b>(\n        projectId: \"10000\",\n        testIssueIds: [\"10002\",\"12324\",\"12345\"]\n    )\n}\n</pre>\n===",
              "args": [
                {
                  "name": "projectId",
                  "description": "the project id of the Folder.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testPlanId",
                  "description": "the Test Plan id of the Folder.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testIssueIds",
                  "description": "the Test ids to remove from the Folder.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeIssuesFromFolder",
              "description": "Mutation used to remove issues from Folder.\n===\nThe mutation below will remove issues from a Folder.\n<pre>\nmutation {\n    <b>removeIssuesFromFolder</b>(\n        projectId: \"10000\",\n        issueIds: [\"10002\",\"12324\",\"12345\"]\n    )\n}\n</pre>\n===",
              "args": [
                {
                  "name": "projectId",
                  "description": "the project id of the Folder.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "issueIds",
                  "description": "the Test or Precondition ids to remove from the Folder.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createTest",
              "description": "Mutation used to create a new Test.\n===\nThe mutation below will create a new Test.\n<pre>\nmutation {\n    <b>createTest</b>(\n        testType: { name: \"Generic\" },\n        unstructured: \"Perform exploratory tests on calculator.\",\n        jira: {\n            fields: { summary:\"Exploratory Test\", project: {key: \"CALC\"} }\n        }\n    ) {\n        test {\n            issueId\n            testType {\n                name\n            }\n            unstructured\n            jira(fields: [\"key\"])\n        }\n        warnings\n    }\n}\n</pre>\n=== ===\nThe mutation below will create a new Test.\n<pre>\nmutation {\n    <b>createTest</b>(\n        testType: { name: \"Manual\" },\n        steps: [\n            {\n                action: \"Create first example step\",\n                result: \"First step was created\"\n            },\n            {\n                action: \"Create second example step with data\",\n                data: \"Data for the step\",\n                result: \"Second step was created with data\"\n            }\n        ],\n        jira: {\n            fields: { summary:\"Exploratory Test\", project: {key: \"CALC\"} }\n        }\n    ) {\n        test {\n            issueId\n            testType {\n                name\n            }\n            steps {\n                action\n                data\n                result\n            }\n            jira(fields: [\"key\"])\n        }\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "testType",
                  "description": "the Test Type of the Test.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateTestTypeInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "steps",
                  "description": "the Step definition of the test.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateStepInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "unstructured",
                  "description": "the unstructured definition of the Test.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "gherkin",
                  "description": "the gherkin definition of the Test.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "preconditionIssueIds",
                  "description": "the Precondition ids that be associated with the Test.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "folderPath",
                  "description": "the Test repository folder for the Test.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "jira",
                  "description": "the Jira object that will be used to create the Test.\nCheck [this](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-api-3-issue-post) Jira endpoint for more information related with this field.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "JSON",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CreateTestResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateTestType",
              "description": "Mutation used to update the Test Type of a Test.\n===\nThe mutation below will update the Test Type of the Test with id \"12345\".\n<pre>\nmutation {\n    <b>updateTestType</b>(issueId: \"12345\", testType: {name: \"Manual\"} ) {\n        issueId\n        testType {\n            name\n            kind\n        }\n    }\n}\n</pre>\n===\n===\nThe mutation below will update the Test Type of the version 3 of the Test with id \"12345\".\n<pre>\nmutation {\n    <b>updateTestType</b>(issueId: \"12345\", versionId: 3, testType: {name: \"Manual\"} ) {\n        issueId\n        testType {\n            name\n            kind\n        }\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "versionId",
                  "description": "the id of a Test version. If not given, will update the default Test version.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testType",
                  "description": "the Test Type to update on the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateTestTypeInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Test",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateUnstructuredTestDefinition",
              "description": "Mutation used to update the Unstructured definition of a Test.\n===\nThe mutation below will update the unstructured definition of the Test with id \"12345\".\n<pre>\nmutation {\n    <b>updateUnstructuredTestDefinition</b>(issueId: \"12345\", unstructured: \"Generic definition\" ) {\n        issueId\n        unstructured\n    }\n}\n</pre>\n===\n===\nThe mutation below will update the unstructured definition of the version 3 of the Test with id \"12345\".\n<pre>\nmutation {\n    <b>updateUnstructuredTestDefinition</b>(issueId: \"12345\", versionId: 3, unstructured: \"Generic definition\" ) {\n        issueId\n        unstructured\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "versionId",
                  "description": "the id of a Test version. If not given, will update the default Test version.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "unstructured",
                  "description": "the unstructured definition of the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Test",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateGherkinTestDefinition",
              "description": "Mutation used to update the Gherkin definition of a Test.\n===\nThe mutation below will update the gherkin definition of the Test with id \"12345\".\n<pre>\nmutation {\n    <b>updateGherkinTestDefinition</b>(issueId: \"12345\", gherkin: \"Gherkin definition\" ) {\n        issueId\n        gherkin\n    }\n}\n</pre>\n===\n===\nThe mutation below will update the gherkin definition of the version 3 of the Test with id \"12345\".\n<pre>\nmutation {\n    <b>updateGherkinTestDefinition</b>(issueId: \"12345\", versionId: 3, gherkin: \"Gherkin definition\" ) {\n        issueId\n        gherkin\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "versionId",
                  "description": "the id of a Test version. If not given, will update the default Test version.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "gherkin",
                  "description": "the gherkin definition of the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Test",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteTest",
              "description": "Mutation used to delete a Test.\n===\nThe mutation below will delete the Test with issue id \"12345\".\n<pre>\nmutation {\n    <b>deleteTest</b>(issueId: \"12345\")\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addTestStep",
              "description": "Mutation used to add a Step to a Test.\n===\nThe mutation below will add a new Step to the test with id \"12345\".\n<pre>\nmutation {\n    <b>addTestStep</b>(\n        issueId: \"12345\",\n        step: {\n            action: \"Use Xray Cloud Rest Api to add a new Step to the Test\",\n            result: \"Step was added to the Test\",\n            customFields: [{id:\"5ddc0e585da9670010e608dc\", value:\"Tokyo\"}]\n        }\n    ) {\n        id\n        action\n        data\n        result\n    }\n}\n</pre>\n===\n===\nThe mutation below will add a new Step to the version 3 of the Test with id \"12345\".\n<pre>\nmutation {\n    <b>addTestStep</b>(\n        issueId: \"12345\",\n        versionId: 3,\n        step: {\n            action: \"Use Xray Cloud Rest Api to add a new Step to the Test\",\n            result: \"Step was added to the Test\",\n            customFields: [{id:\"5ddc0e585da9670010e608dc\", value:\"Tokyo\"}]\n        }\n    ) {\n        id\n        action\n        data\n        result\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "versionId",
                  "description": "the id of a Test version. If not given, will update the default Test version.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "step",
                  "description": "the Step to add to the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateStepInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Step",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateTestStep",
              "description": "Mutation used to update a Step of a Test.\n===\nThe mutation below will update the Step with id \"836d30ec-f034-4a03-879e-9c44a1d6d1fe\".\n<pre>\nmutation {\n    <b>updateTestStep</b>(\n        stepId: \"836d30ec-f034-4a03-879e-9c44a1d6d1fe\",\n        step: {\n            result: \"Xray Cloud Rest Api works as expected\",\n            customFields: [{id:\"5ddc0e585da9670010e608dc\", value:\"Lisbon\"}]\n        }\n    ) {\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "stepId",
                  "description": "the id of the Step.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "step",
                  "description": "the information to update on the Step.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateStepInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateTestStepResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeTestStep",
              "description": "Mutation used to remove a Step from a Test.\n===\nThe mutation below removes the Step with id \"836d30ec-f034-4a03-879e-9c44a1d6d1fe\".\n<pre>\nmutation {\n    <b>removeTestStep</b>(\n        stepId: \"836d30ec-f034-4a03-879e-9c44a1d6d1fe\",\n    )\n}\n</pre>\n===",
              "args": [
                {
                  "name": "stepId",
                  "description": "the id of the Step.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeAllTestSteps",
              "description": "Mutation used to remove all Steps from a Test.\n===\nThe mutation below removes all the Steps from test with id \"12345\".\n<pre>\nmutation {\n    <b>removeAllTestSteps</b>(\n        issueId: \"12345\",\n    )\n}\n</pre>\n===\n===\nThe mutation below removes all the Steps from the version 3 of the Test with id \"12345\".\n<pre>\nmutation {\n    <b>removeAllTestSteps</b>(\n        issueId: \"12345\",\n        versionId: 3\n    )\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the id of the Step.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "versionId",
                  "description": "the id of a Test version. If not given, will update the default Test version.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addPreconditionsToTest",
              "description": "Mutation used to associate Preconditions to the Test.\n<b>Note</b>: The preconditions to be associated with the Test must be of the same Test Type of the Test.\n===\nThe mutation below will associate the precondition with issue id \"54321\" to the test \"12345\".\n<pre>\nmutation {\n    <b>addPreconditionsToTest</b>(\n        issueId: \"12345\",\n        preconditionIssueIds: [\"54321\"]\n    ) {\n        addedPreconditions\n        warning\n    }\n}\n</pre>\n===\n===\nThe mutation below will associate the precondition with issue id \"54321\" to the version 3 of the Test \"12345\".\n<pre>\nmutation {\n    <b>addPreconditionsToTest</b>(\n        issueId: \"12345\",\n        versionId: 3,\n        preconditionIssueIds: [\"54321\"]\n    ) {\n        addedPreconditions\n        warning\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "versionId",
                  "description": "the id of a Test version. If not given, will update the default Test version.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "preconditionIssueIds",
                  "description": "the issue ids of the Preconditions.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddPreconditionsResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removePreconditionsFromTest",
              "description": "Mutation used to remove Preconditions from the Test.\n===\nThe mutation below will remove the preconditions with issue id \"54321\" and \"67890\" from the test \"12345\".\n<pre>\nmutation {\n    <b>removePreconditionsFromTest</b>(issueId: \"12345\", preconditionIssueIds: [\"54321\", \"67890\"])\n}\n</pre>\n===\n===\nThe mutation below will remove the preconditions with issue id \"54321\" and \"67890\" from the version 3 of the Test \"12345\".\n<pre>\nmutation {\n    <b>removePreconditionsFromTest</b>(issueId: \"12345\", versionId: 3, preconditionIssueIds: [\"54321\", \"67890\"])\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "versionId",
                  "description": "the id of a Test version. If not given, will update the default Test version.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "preconditionIssueIds",
                  "description": "the issue ids of the Preconditions.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateTestFolder",
              "description": "Mutation used update the Test folder on the Test Repository.\n===\nThe mutation below will add the test to \"Component/UI\" folder.\n<pre>\nmutation {\n    <b>updateTestFolder</b>(\n        issueId: \"12345\",\n        folderPath: \"/Component/UI\"\n    )\n}\n</pre>\nThe mutation below will move the Test to the root.\n<pre>\nmutation {\n    <b>updateTestFolder</b>(\n        issueId: \"12345\",\n        folderPath: \"/\"\n    )\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "folderPath",
                  "description": "the Test repository folder for the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatePreconditionFolder",
              "description": "Mutation used update the precondition folder on the Test Repository.\n===\nThe mutation below will add the precondition to \"Component/UI\" folder.\n<pre>\nmutation {\n    <b>updatePreconditionFolder</b>(\n        issueId: \"12345\",\n        folderPath: \"/Component/UI\"\n    )\n}\n</pre>\nThe mutation below will move the Precondition to the root.\n<pre>\nmutation {\n    <b>updatePreconditionFolder</b>(\n        issueId: \"12345\",\n        folderPath: \"/\"\n    )\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Precondition.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "folderPath",
                  "description": "the Test repository folder for the Precondition.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addTestSetsToTest",
              "description": "Mutation used to associate Test Sets to the Test.\n===\nThe mutation below will associate the test set with issue id \"54321\" to the test \"12345\".\n<pre>\nmutation {\n    <b>addTestSetsToTest</b>(\n        issueId: \"12345\",\n        testSetIssueIds: [\"54321\"]\n    ) {\n        addedTestSets\n        warning\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testSetIssueIds",
                  "description": "the issue ids of the Test Sets.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddTestSetsResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeTestSetsFromTest",
              "description": "Mutation used to remove Test Sets from the Test.\n===\nThe mutation below will remove the Test Sets with issue id \"54321\" and \"67890\" from the test \"12345\".\n<pre>\nmutation {\n    <b>removeTestSetsFromTest</b>(issueId: \"12345\", testSetIssueIds: [\"54321\", \"67890\"])\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testSetIssueIds",
                  "description": "the issue ids of the Test Sets.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addTestPlansToTest",
              "description": "Mutation used to associate Test Plans to the Test.\n===\nThe mutation below will associate the Test Plan with issue id \"54321\" to the test \"12345\".\n<pre>\nmutation {\n    <b>addTestPlansToTest</b>(\n        issueId: \"12345\",\n        testPlanIssueIds: [\"54321\"]\n    ) {\n        addedTestPlans\n        warning\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testPlanIssueIds",
                  "description": "the issue ids of the Test Plans.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddTestPlansResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeTestPlansFromTest",
              "description": "Mutation used to remove Test Plans from the Test.\n===\nThe mutation below will remove the Test Plans with issue id \"54321\" and \"67890\" from the Test \"12345\".\n<pre>\nmutation {\n    <b>removeTestPlansFromTest</b>(issueId: \"12345\", testPlanIssueIds: [\"54321\", \"67890\"])\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testPlanIssueIds",
                  "description": "the issue ids of the Test Plans.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addTestExecutionsToTest",
              "description": "Mutation used to associate Test Executions to the Test.\n===\nThe mutation below will associate the Test Execution with issue id \"54321\" to the Test \"12345\".\n<pre>\nmutation {\n    <b>addTestExecutionsToTest</b>(\n        issueId: \"12345\",\n        testExecIssueIds: [\"54321\"]\n    ) {\n        addedTestExecutions\n        warning\n    }\n}\n</pre>\n===\n===\nThe mutation below will associate the Test Execution with issue id \"54321\" to version 3 of the Test \"12345\".\n<pre>\nmutation {\n    <b>addTestExecutionsToTest</b>(\n        issueId: \"12345\",\n        versionId: 3,\n        testExecIssueIds: [\"54321\"]\n    ) {\n        addedTestExecutions\n        warning\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "versionId",
                  "description": "the id of a Test version. If not given, will update the default Test version.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testExecIssueIds",
                  "description": "the issue ids of the Test Executions.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddTestExecutionsResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeTestExecutionsFromTest",
              "description": "Mutation used to remove Test Executions from the Test.\n===\nThe mutation below will remove the Test Executions with issue id \"54321\" and \"67890\" from the Test \"12345\".\n<pre>\nmutation {\n    <b>removeTestExecutionsFromTest</b>(issueId: \"12345\", testExecIssueIds: [\"54321\", \"67890\"])\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testExecIssueIds",
                  "description": "the issue ids of the Test Executions.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createPrecondition",
              "description": "Mutation used to create a new Precondition.\n===\nThe mutation below will create a new Precondition.\n<pre>\nmutation {\n    <b>createPrecondition</b>(\n        preconditionType: { name: \"Generic\" }\n        definition: \"Turn on calculator.\"\n        jira: {\n            fields: { summary:\"Turn on calculator\", project: {key: \"CALC\"} }\n        }\n    ) {\n        precondition {\n            issueId\n            preconditionType {\n                name\n            }\n            definition\n            jira(fields: [\"key\"])\n        }\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "preconditionType",
                  "description": "the Precondition Type of the Precondition issue.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdatePreconditionTypeInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "definition",
                  "description": "the definition of the Precondition issue.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testIssueIds",
                  "description": "the Test issue ids to be associated with the Precondition issue. Will associate the default Test versions. Cannot be used with <b>tests</b>.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "tests",
                  "description": "the Test versions to be associated with the Precondition. Cannot be used with <b>testIssueIds</b>.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "TestWithVersionInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "folderPath",
                  "description": "the Test repository folder for the Precondition.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "jira",
                  "description": "the jira object that will be used to create the Precondition.\nCheck [this](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-api-3-issue-post) Jira endpoint for more information related with this field.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "JSON",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CreatePreconditionResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatePrecondition",
              "description": "Mutation used to update a Precondition\n===\nThe mutation below will update the Precondition with id \"49137\"\n<pre>\nmutation {\n    <b>updatePrecondition</b>(\n        issueId: \"49137\",\n        data: { preconditionType: {name: \"Manual\" }, definition: \"Turn on calculator\" }\n    ) {\n        issueId\n        preconditionType {\n            kind\n            name\n        }\n        definition\n    }\n}\n</pre>\n===\n===\nThe mutation below will update the Precondition with id \"12345\" and move it to the specified folder\n<pre>\nmutation {\n    <b>updatePrecondition</b>(\n        issueId: \"12345\",\n        data: { folderPath: \"/generic\" }\n    ) {\n        issueId\n        preconditionType {\n            kind\n            name\n        }\n        definition\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Precondition.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "data",
                  "description": "the object containing the information to update the Precondition.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdatePreconditionInput",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Precondition",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletePrecondition",
              "description": "Mutation used to delete a Precondition\n===\nThe mutation below will delete the Precondition with issue id \"12345\"\n<pre>\nmutation {\n    <b>deletePrecondition</b>(issueId: \"12345\")\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Precondition.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addTestsToPrecondition",
              "description": "Mutation used to associate Tests to the Precondition. One of <b>testIssueIds</b> or <b>tests</b> is required.\n<b>Note</b>: The Tests to be associated with the Precondition must be of the same Test Type of the Precondition.\n===\nThe mutation below will associate the Test with issue id \"54321\" to the Precondition \"12345\"\n<pre>\nmutation {\n    <b>addTestsToPrecondition</b>(\n        issueId: \"12345\",\n        testIssueIds: [\"54321\"]\n    ) {\n        addedTests\n        warning\n    }\n}\n</pre>\n===\n===\nThe mutation below will associate the version 2 of Test \"54321\" and the version 3 of Test \"67890\" to the Precondition \"12345\"\n<pre>\nmutation {\n    <b>addTestsToPrecondition</b>(\n        issueId: \"12345\",\n        tests: [{ issueId: \"54321\", versionId: 2 }, { issueId: \"67890\", versionId: 3 }]\n    ) {\n        addedTests\n        warning\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Precondition.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testIssueIds",
                  "description": "the issue ids of the Tests. Will associate the default Test versions. Cannot be used with <b>tests</b>.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "tests",
                  "description": "the ids of the Test versions.  Cannot be used with <b>testIssueIds</b>.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "TestWithVersionInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddTestsResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeTestsFromPrecondition",
              "description": "Mutation used to remove Tests from the Precondition. One of <b>testIssueIds</b> or <b>tests</b> is required.\n===\nThe mutation below will remove the Tests with issue id \"54321\" and \"67890\" from the Precondition \"12345\".\n<pre>\nmutation {\n    <b>removeTestsFromPrecondition</b>(issueId: \"12345\", testIssueIds: [\"54321\", \"67890\"])\n}\n</pre>\n===\n===\nThe mutation below will remove the version 2 of Test \"54321\" and the version 3 of Test \"67890\" from the Precondition \"12345\".\n<pre>\nmutation {\n    <b>removeTestsFromPrecondition</b>(\n        issueId: \"12345\",\n        tests: [{ issueId: \"54321\", versionId: 2 }, { issueId: \"67890\", versionId: 3 }]\n    )\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Precondition.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testIssueIds",
                  "description": "the issue ids of the Tests. Will remove the default Test versions. Cannot be used with <b>tests</b>.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "tests",
                  "description": "the ids of the Test versions. Cannot be used with <b>testIssueIds</b>.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "TestWithVersionInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createTestSet",
              "description": "Mutation used to create a new Test Set.\n===\nThe mutation below will create a new Test Set.\n<pre>\nmutation {\n    <b>createTestSet</b>(\n        testIssueIds: [\"54321\"]\n        jira: {\n            fields: { summary: \"Test Set for Generic Tests\", project: {key: \"CALC\"} }\n        }\n    ) {\n        testSet {\n            issueId\n            jira(fields: [\"key\"])\n        }\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "testIssueIds",
                  "description": "the Test ids that will be associated with the Test Set.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "jira",
                  "description": "the Jira object that will be used to create the Test Set.\nCheck [this](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-api-3-issue-post) Jira endpoint for more information related with this field.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "JSON",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CreateTestSetResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteTestSet",
              "description": "Mutation used to delete a Test Set\n===\nThe mutation below will delete the Test Set with issue id \"12345\".\n<pre>\nmutation {\n    <b>deleteTestSet</b>(issueId: \"12345\")\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "The issue id of the Test Set.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addTestsToTestSet",
              "description": "Mutation used to associate Tests to the Test Set.\n===\nThe mutation below will associate the test with issue id \"54321\" to the Test Set \"12345\".\n<pre>\nmutation {\n    <b>addTestsToTestSet</b>(\n        issueId: \"12345\",\n        testIssueIds: [\"54321\"]\n    ) {\n        addedTests\n        warning\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test Set.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testIssueIds",
                  "description": "the issue ids of the Tests.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddTestsResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeTestsFromTestSet",
              "description": "Mutation used to remove Tests from the Test Set.\n===\nThe mutation below will remove the Tests with issue id \"54321\" and \"67890\" from the test set \"12345\".\n<pre>\nmutation {\n    <b>removeTestsFromTestSet</b>(issueId: \"12345\", testIssueIds: [\"54321\", \"67890\"])\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test Set.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testIssueIds",
                  "description": "the issue ids of the Tests.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createTestPlan",
              "description": "Mutation used to create a new Test Plan.\n===\nThe mutation below will create a new Test Plan.\n<pre>\nmutation {\n    <b>createTestPlan</b>(\n        testIssueIds: [\"54321\"]\n        jira: {\n            fields: { summary: \"Test Plan for v1.0\", project: {key: \"CALC\"} }\n        }\n    ) {\n        testPlan {\n            issueId\n            jira(fields: [\"key\"])\n        }\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "savedFilter",
                  "description": "the saved filter id or name that will be used to configure the Test Plan. Cannot be used with <b>testIssueIds</b>.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "testIssueIds",
                  "description": "the test issue ids that will be associated with the Test Plan. Cannot be used with <b>savedFilter</b>.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "jira",
                  "description": "the Jira object that will be used to create the Test Plan.\nCheck [this](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-api-3-issue-post) Jira endpoint for more information related with this field.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "JSON",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CreateTestPlanResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteTestPlan",
              "description": "Mutation used to delete a Test Plan.\n===\nThe mutation below will delete the Test Plan with id \"12345\".\n<pre>\nmutation {\n    <b>deleteTestPlan</b>(issueId: \"12345\")\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "issue id of the Test Plan.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addTestsToTestPlan",
              "description": "Mutation used to associate Tests to the Test Plan.\n===\nThe mutation below will associate the test with issue id \"54321\" to the Test Plan \"12345\".\n<pre>\nmutation {\n    <b>addTestsToTestPlan</b>(\n        issueId: \"12345\",\n        testIssueIds: [\"54321\"]\n    ) {\n        addedTests\n        warning\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test Plan.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testIssueIds",
                  "description": "the issue ids of the Tests.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddTestsResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeTestsFromTestPlan",
              "description": "Mutation used to remove Tests from the Test Plan.\n===\nThe mutation below will remove the Tests with id \"54321\" and \"67890\" from the Test Plan \"12345\".\n<pre>\nmutation {\n    <b>removeTestsFromTestPlan</b>(issueId: \"12345\", testIssueIds: [\"54321\", \"67890\"])\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test Plan.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testIssueIds",
                  "description": "the issue ids of the Tests.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addTestExecutionsToTestPlan",
              "description": "Mutation used to associate Test Executions to the Test Plan.\n===\nThe mutation below will associate the Test Execution with issue id \"54321\" to the test Plan \"12345\".\n<pre>\nmutation {\n    <b>addTestExecutionsToTestPlan</b>(\n        issueId: \"12345\",\n        testExecIssueIds: [\"54321\"]\n    ) {\n        addedTestExecutions\n        warning\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test Plan.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testExecIssueIds",
                  "description": "the issue ids of the Test Executions.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddTestExecutionsResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeTestExecutionsFromTestPlan",
              "description": "Mutation used to remove Test Executions from the Test Plan.\n===\nThe mutation below will remove the Test executions with issue id \"54321\" and \"67890\" from the Test Plan \"12345\".\n<pre>\nmutation {\n    <b>removeTestExecutionsFromTestPlan</b>(issueId: \"12345\", testExecIssueIds: [\"54321\", \"67890\"])\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test Plan.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testExecIssueIds",
                  "description": "the issue ids of the Test Executions.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createTestExecution",
              "description": "Mutation used to create a new Test Execution.\n===\nThe mutation below will create a new Test Execution.\n<pre>\nmutation {\n    <b>createTestExecution</b>(\n        testIssueIds: [\"54321\"]\n        testEnvironments: [\"android\"]\n        jira: {\n            fields: { summary: \"Test Execution for CALC-123\", project: {key: \"CALC\"} }\n        }\n    ) {\n        testExecution {\n            issueId\n            jira(fields: [\"key\"])\n        }\n        warnings\n        createdTestEnvironments\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "testIssueIds",
                  "description": "the test issue ids that will be associated with the Test Execution. Cannot be used with <b>tests</b>.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "tests",
                  "description": "the Test versions to be associated with the Test Execution. Cannot be used with <b>testIssueIds</b>.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "TestWithVersionInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testEnvironments",
                  "description": "the test environments to be added to the Test Execution.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "jira",
                  "description": "the Jira object that will be used to create the Test Execution.\nCheck [this](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-api-3-issue-post) Jira endpoint for more information related with this field.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "JSON",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CreateTestExecutionResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteTestExecution",
              "description": "Mutation used to delete a Test Execution.\n===\nThe mutation below will delete the Test Execution with id \"12345\".\n<pre>\nmutation {\n    <b>deleteTestExecution</b>(issueId: \"12345\")\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test Execution.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addTestsToTestExecution",
              "description": "Mutation used to associate Tests to the Test Execution. One of <b>testIssueIds</b> or <b>tests</b> is required.\n===\nThe mutation below will associate the test with issue id \"54321\" to the Test execution \"12345\".\n<pre>\nmutation {\n    <b>addTestsToTestExecution</b>(\n        issueId: \"12345\",\n        testIssueIds: [\"54321\"]\n    ) {\n        addedTests\n        warning\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test Execution.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testIssueIds",
                  "description": "the ids of the Tests. Will associate the default Test versions. Cannot be used with <b>tests</b>.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "tests",
                  "description": "the ids of the Test versions. Cannot be used with <b>testIssueIds</b>.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "TestWithVersionInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddTestsResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeTestsFromTestExecution",
              "description": "Mutation used to remove Tests from the Test Execution.\n===\nThe mutation below will remove the Tests with issue id \"54321\" and \"67890\" from the Test Execution \"12345\".\n<pre>\nmutation {\n    <b>removeTestsFromTestExecution</b>(issueId: \"12345\", testIssueIds: [\"54321\", \"67890\"])\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "issue id of the Test Execution.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testIssueIds",
                  "description": "the ids of the Tests.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addTestEnvironmentsToTestExecution",
              "description": "Mutation used to add Test Environments to the Test Execution.\n===\nThe mutation below will add the test Environments \"android\" and \"ios\" to the Test execution \"12345\".\n<pre>\nmutation {\n    <b>addTestEnvironmentsToTestExecution</b>(\n        issueId: \"12345\",\n        testEnvironments: [\"android\", \"ios\"]\n    ) {\n        associatedTestEnvironments\n        createdTestEnvironments\n        warning\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test Execution.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testEnvironments",
                  "description": "the test environments to add.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddTestEnvironmentsResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeTestEnvironmentsFromTestExecution",
              "description": "Mutation used to remove Test Environments from the Test Execution.\n===\nThe mutation below will remoive the Test Environments \"android\" and \"ios\" from the Test execution \"12345\".\n<pre>\nmutation {\n    <b>removeTestEnvironmentsFromTestExecution</b>(\n        issueId: \"12345\",\n        testEnvironments: [\"android\", \"ios\"]\n    )\n}\n</pre>\n===",
              "args": [
                {
                  "name": "issueId",
                  "description": "the issue id of the Test Execution.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "testEnvironments",
                  "description": "the test environments to remove",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "resetTestRun",
              "description": "Mutation used to reset the Test Run. This will load the new test definition and delete the current execution data.\n===\nThe mutation below resets the Test Run.\n<pre>\nmutation {\n    <b>resetTestRun</b>( id: \"5acc7ab0a3fe1b6fcdc3c737\")\n}\n</pre>\n===",
              "args": [
                {
                  "name": "id",
                  "description": "the id of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateTestRunStatus",
              "description": "Mutation used to update the status of a Test Run.\n===\nThe mutation below updates the status of a Test Run.\n<pre>\nmutation {\n    <b>updateTestRunStatus</b>( id: \"5acc7ab0a3fe1b6fcdc3c737\", status: \"PASSED\")\n}\n</pre>\n===",
              "args": [
                {
                  "name": "id",
                  "description": "the id of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "status",
                  "description": "the id or name of the status of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateTestRunComment",
              "description": "Mutation used to update the comment of a Test Run.\n===\nThe mutation below updates the comment of a Test Run.\n<pre>\nmutation {\n    <b>updateTestRunComment</b>( id: \"5acc7ab0a3fe1b6fcdc3c737\", comment: \"Everything is OK.\")\n}\n</pre>\n===",
              "args": [
                {
                  "name": "id",
                  "description": "the id of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "comment",
                  "description": "the comment of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateTestRun",
              "description": "Mutation used to update a Test Run.\n===\nThe mutation below updates a Test Run.\n<pre>\nmutation {\n    <b>updateTestRun</b>( id: \"5acc7ab0a3fe1b6fcdc3c737\", comment: \"Everything is OK.\", startedOn: \"2020-03-09T10:35:09Z\", finishedOn: \"2020-04-09T10:35:09Z\", assigneeId: \"e5983db2-90f7-4135-a96f-46907e72290e\", executedById: \"e5983db2-90f7-4135-a96f-46907e72290e\") {\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "id",
                  "description": "the id of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "comment",
                  "description": "the comment of the Test Run.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "startedOn",
                  "description": "the startedOn of the Test Run.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "finishedOn",
                  "description": "the finishedOn of the Test Run.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "assigneeId",
                  "description": "the assignee of the Test Run.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "executedById",
                  "description": "the executedBy of the Test Run.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "customFields",
                  "description": "the customFields of the Test Run.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CustomFieldInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateTestRunResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addDefectsToTestRun",
              "description": "Mutation used to add defects to a Test Run.\n===\nThe mutation below adds 2 defects to the Test Run.\n<pre>\nmutation {\n    <b>addDefectsToTestRun</b>( id: \"5acc7ab0a3fe1b6fcdc3c737\", issues: [\"XRAY-1234\", \"12345\"]) {\n        addedDefects\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "id",
                  "description": "the id of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "issues",
                  "description": "the ids or keys of the defects to add to the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddDefectsResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeDefectsFromTestRun",
              "description": "Mutation used to remove defects from a Test Run.\n===\nThe mutation below removes 2 defects from the Test Run.\n<pre>\nmutation {\n    <b>removeDefectsFromTestRun</b>( id: \"5acc7ab0a3fe1b6fcdc3c737\", issues: [\"XRAY-1234\", \"12345\"])\n}\n</pre>\n===",
              "args": [
                {
                  "name": "id",
                  "description": "the id of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "issues",
                  "description": "the ids or keys of the defects to remove from the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addEvidenceToTestRun",
              "description": "Mutation used to add evidence to a Test Run.\n===\nThe mutation below adds an evidence to the Test Run.\n<pre>\nmutation {\n    <b>addEvidenceToTestRun</b>(\n        id: \"5acc7ab0a3fe1b6fcdc3c737\",\n        evidence: [\n            {\n                filename: \"evidence.txt\"\n                mimeType: \"text/plain\"\n                data: \"SGVsbG8gV29ybGQ=\"\n            }\n        ]\n    ) {\n        addedEvidence\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "id",
                  "description": "the id of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "evidence",
                  "description": "the evidence to add to the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "INPUT_OBJECT",
                        "name": "AttachmentDataInput",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddEvidenceResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeEvidenceFromTestRun",
              "description": "Mutation used to remove evidence from a Test Run.\n===\nThe mutation below removes an evidence from the Test Run.\n<pre>\nmutation {\n    <b>removeEvidenceFromTestRun</b>(\n        id: \"5acc7ab0a3fe1b6fcdc3c737\",\n        evidenceFilenames: [\"evidence.txt\"]\n    ) {\n        removedEvidence\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "id",
                  "description": "the id of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "evidenceIds",
                  "description": "the ids of the evidence to remove from the Test Run.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "evidenceFilenames",
                  "description": "the filenames of the evidence to remove from the Test Run.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RemoveEvidenceResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateTestRunStep",
              "description": "Mutation used to update the Test Run Step.\n===\nThe mutation below will change the status, update the comment and add a defect to the Test Run Step.\n<pre>\nmutation {\n    <b>updateTestRunStep</b>(\n        testRunId: \"5e8489c05f200f3cd45bbaf0\",\n        stepId: \"316eb258-10bb-40c0-ae40-ab76004cc505\",\n        updateData: {\n            comment: \"Step failed\"\n            status: \"FAILED\"\n            defects: {\n                add: [\"12345\"]\n            }\n        }\n    ) {\n        addedDefects\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "testRunId",
                  "description": "The id of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "stepId",
                  "description": "the id of the Test Run Step.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "updateData",
                  "description": "the update information.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateTestRunStepInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "iterationRank",
                  "description": "the rank of the iteration.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateTestRunStepResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addEvidenceToTestRunStep",
              "description": "Mutation used to add evidence to a Test Run Step.\n===\nThe mutation below adds an evidence to the Test Run Step.\n<pre>\nmutation {\n    <b>addEvidenceToTestRunStep</b>(\n        testRunId: \"5e8489c05f200f3cd45bbaf0\",\n        stepId: \"316eb258-10bb-40c0-ae40-ab76004cc505\",\n        evidence: [\n            {\n                filename: \"evidence.txt\"\n                mimeType: \"text/plain\"\n                data: \"SGVsbG8gV29ybGQ=\"\n            }\n        ]\n    ) {\n        addedEvidence\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "testRunId",
                  "description": "The id of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "stepId",
                  "description": "the id of the Test Run Step.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "evidence",
                  "description": "the evidence to add to the Test Run Step.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "AttachmentDataInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "iterationRank",
                  "description": "the rank of the iteration.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddEvidenceResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeEvidenceFromTestRunStep",
              "description": "Mutation used to remove evidence from a Test Run Step.\n===\nThe mutation below removes an evidence from the Test Run Step.\n<pre>\nmutation {\n    <b>removeEvidenceFromTestRunStep</b>(\n        testRunId: \"5e8489c05f200f3cd45bbaf0\",\n        stepId: \"316eb258-10bb-40c0-ae40-ab76004cc505\",\n        evidenceFilenames: [\"evidence.txt\"]\n    ) {\n        removedEvidence\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "testRunId",
                  "description": "The id of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "stepId",
                  "description": "the id of the Test Run Step.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "iterationRank",
                  "description": "the rank of the iteration.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "evidenceIds",
                  "description": "the id of the evidence.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "evidenceFilenames",
                  "description": "the filename of the evidence.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RemoveEvidenceResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addDefectsToTestRunStep",
              "description": "Mutation used to add defects to a Test Run Step.\n===\nThe mutation below adds 2 defects to the Test Run Step.\n<pre>\nmutation {\n    <b>addDefectsToTestRunStep</b>(\n        testRunId: \"5e8489c05f200f3cd45bbaf0\",\n        stepId: \"316eb258-10bb-40c0-ae40-ab76004cc505\",\n        issues: [\"XRAY-1234\", \"12345\"]\n    ) {\n        addedDefects\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "testRunId",
                  "description": "The id of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "stepId",
                  "description": "the id of the Test Run Step.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "issues",
                  "description": "the ids or keys of the defects.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "iterationRank",
                  "description": "the rank of the iteration.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddDefectsResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeDefectsFromTestRunStep",
              "description": "Mutation used to remove defects from a Test Run.\n===\nThe mutation below removes 2 defects from the Test Run.\n<pre>\nmutation {\n    <b>removeDefectsFromTestRunStep</b>(\n        testRunId: \"5e8489c05f200f3cd45bbaf0\",\n        stepId: \"316eb258-10bb-40c0-ae40-ab76004cc505\",\n        issues: [\"XRAY-1234\", \"12345\"]\n    ) {\n        removedDefects\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "testRunId",
                  "description": "The id of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "stepId",
                  "description": "the id of the Test Run Step.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "issues",
                  "description": "the ids or keys of the defects.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "iterationRank",
                  "description": "the rank of the iteration.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RemoveDefectsResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateTestRunStepComment",
              "description": "Mutation used to update the comment of a Test Run Step.\n===\nThe mutation below updates the comment of a Test Run Step.\n<pre>\nmutation {\n    <b>updateTestRunStepComment</b>(\n        testRunId: \"5e8489c05f200f3cd45bbaf0\",\n        stepId: \"316eb258-10bb-40c0-ae40-ab76004cc505\",\n        comment: \"This step is OK.\"\n    )\n}\n</pre>\n===",
              "args": [
                {
                  "name": "testRunId",
                  "description": "The id of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "stepId",
                  "description": "the id of the Test Run Step.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "comment",
                  "description": "the comment of the Test Run Step.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "iterationRank",
                  "description": "the rank of the iteration.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateTestRunStepStatus",
              "description": "Mutation used to update the status of a Test Run Step.\n===\nThe mutation below updates the status of a Test Run Step.\n<pre>\nmutation {\n    <b>updateTestRunStepStatus</b>(\n        testRunId: \"5e8489c05f200f3cd45bbaf0\",\n        stepId: \"316eb258-10bb-40c0-ae40-ab76004cc505\",\n        status: \"PASSED\"\n    ) {\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "testRunId",
                  "description": "The id of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "stepId",
                  "description": "the id of the Test Run Step.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "status",
                  "description": "the id or name of the status of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "iterationRank",
                  "description": "the rank of the iteration.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateTestRunStepStatusResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateTestRunExampleStatus",
              "description": "Mutation used to update the status of a Test Run Example.\n===\nThe mutation below updates the status of a Test Run example.\n<pre>\nmutation {\n    <b>updateTestRunExampleStatus</b>(\n        exampleId: \"5bbd8ab0a3fe1b6fcdc3c737\",\n        status: \"PASSED\"\n    ) {\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "exampleId",
                  "description": "the id of the Test Run Example.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "status",
                  "description": "the id or name of the status of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateTestRunExampleStatusResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateIterationStatus",
              "description": "Mutation used to update the status of a Test Run iteration.\n===\nThe mutation below updates the status of a Test Run iteration.\n<pre>\nmutation {\n    <b>updateIterationStatus</b>(\n        testRunId: \"5e8489c05f200f3cd45bbaf0\",\n        iterationRank: \"0\",\n        status: \"PASSED\"\n    ) {\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "testRunId",
                  "description": "The id of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "iterationRank",
                  "description": "The rank of the iteration.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "status",
                  "description": "the id or name of the status of the iteration.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateIterationStatusResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "setTestRunTimer",
              "description": "Mutation used to set the timer in Test Run. This will start, pause or stop the timer in Test Run.\n===\nThe mutation below start the timer in Test Run.\n<pre>\nmutation {\n    <b>setTestRunTimer</b>( \n        testRunId: \"5acc7ab0a3fe1b6fcdc3c737\"\n        running: true\n    ) {\n        warnings\n    }\n}\n</pre>\n\nThe mutation below stop the timer in Test Run.\n<pre>\nmutation {\n    <b>setTestRunTimer</b>( \n        testRunId: \"5acc7ab0a3fe1b6fcdc3c737\"\n        reset: true\n    ) {\n        warnings\n    }\n}\n</pre>\n===",
              "args": [
                {
                  "name": "testRunId",
                  "description": "the id of the Test Run.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "running",
                  "description": "to start (true) or pause (false) the timer",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "reset",
                  "description": "to stop the timer",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ActionFolderResult",
          "description": "",
          "fields": [
            {
              "name": "folder",
              "description": "Folder updated during the operation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "SimpleFolderResults",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warnings",
              "description": "Warning generated during the operation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SimpleFolderResults",
          "description": "",
          "fields": [
            {
              "name": "name",
              "description": "Folder name",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "Folder path",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "testsCount",
              "description": "Folder tests count",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "preconditionsCount",
              "description": "Folder preconditions count",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issuesCount",
              "description": "Folder issues count",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UpdateTestTypeInput",
          "description": "Test Type input",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Id of the Test Type.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "name",
              "description": "Name of the Test Type.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateStepInput",
          "description": "Create Step input",
          "fields": null,
          "inputFields": [
            {
              "name": "action",
              "description": "Action of the Step.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "data",
              "description": "Data of the Step.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "result",
              "description": "Result of the Step.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "attachments",
              "description": "Attachments of the Step.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AttachmentInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "customFields",
              "description": "Custom Fields of the Step",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "CustomStepFieldInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "callTestIssueId",
              "description": "The issue id of the test called by the step.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "AttachmentInput",
          "description": "Attachment input",
          "fields": null,
          "inputFields": [
            {
              "name": "filename",
              "description": "Filename of the attachment.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "mimeType",
              "description": "Content Type of the attachment.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "data",
              "description": "Data of the attachment. This data should be in base64.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CustomStepFieldInput",
          "description": "Step Custom Field input",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Id of the Custom Field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "value",
              "description": "value of the Custom Field.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateTestResult",
          "description": "Create Test Result type",
          "fields": [
            {
              "name": "test",
              "description": "Test that was created.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Test",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warnings",
              "description": "Warnings generated during the operation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UpdateStepInput",
          "description": "Update Step input",
          "fields": null,
          "inputFields": [
            {
              "name": "action",
              "description": "Action of the Step.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "data",
              "description": "Data of the Step.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "result",
              "description": "Result of the Step.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "attachments",
              "description": "Attachments of the Step.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AttachmentOperationsInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "customFields",
              "description": "Custom Fields of the Step",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "CustomStepFieldInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "AttachmentOperationsInput",
          "description": "Attachment Operations Input",
          "fields": null,
          "inputFields": [
            {
              "name": "add",
              "description": "Attachments to add to the Step.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AttachmentInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "removeIds",
              "description": "Ids of the attachments to remove from the Step.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "removeFilenames",
              "description": "Filenames of the attachments to remove from the Step.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "UpdateTestStepResult",
          "description": "Update Test Step Results type",
          "fields": [
            {
              "name": "addedAttachments",
              "description": "List of added attachments.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removedAttachments",
              "description": "List of removed attachments.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warnings",
              "description": "Warnings generated during the operation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AddPreconditionsResult",
          "description": "Add Preconditions Result type",
          "fields": [
            {
              "name": "addedPreconditions",
              "description": "Issue ids of the added Preconditions.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warning",
              "description": "Warning generated during the operation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AddTestSetsResult",
          "description": "Add Test Sets Result type",
          "fields": [
            {
              "name": "addedTestSets",
              "description": "Issue ids of the added Test Set.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warning",
              "description": "Warning generated during the operation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AddTestPlansResult",
          "description": "Add Test Plans Result type",
          "fields": [
            {
              "name": "addedTestPlans",
              "description": "Issue ids of the added Test Plans.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warning",
              "description": "Warning generated during the operation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AddTestExecutionsResult",
          "description": "Add Test Executions Result type",
          "fields": [
            {
              "name": "addedTestExecutions",
              "description": "Issue ids of the added Test Executions.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warning",
              "description": "Warning generated during the operation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UpdatePreconditionTypeInput",
          "description": "Precondition Type input",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Id of the Precondition Type.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "name",
              "description": "Name of the Precondition Type.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreatePreconditionResult",
          "description": "Create Precondition Response type",
          "fields": [
            {
              "name": "precondition",
              "description": "Precondition that was created.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Precondition",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warnings",
              "description": "Warnings generated during the operation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UpdatePreconditionInput",
          "description": "Update Precondition input",
          "fields": null,
          "inputFields": [
            {
              "name": "preconditionType",
              "description": "Precondition type of the Precondition Issue.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UpdatePreconditionTypeInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "definition",
              "description": "Definition of the Precondition Issue.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "folderPath",
              "description": "the repository path to which the Precondition should be moved to",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AddTestsResult",
          "description": "Add Tests Result type",
          "fields": [
            {
              "name": "addedTests",
              "description": "Issue Ids of the added Tests.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warning",
              "description": "Warning generated during the operation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateTestSetResult",
          "description": "Create Test Set Result type",
          "fields": [
            {
              "name": "testSet",
              "description": "Test Set that was created.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TestSet",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warnings",
              "description": "Warnings generated during the operation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateTestPlanResult",
          "description": "Create Test Plan Result type",
          "fields": [
            {
              "name": "testPlan",
              "description": "Test Plan that was created.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TestPlan",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warnings",
              "description": "Warnings generated during the operation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateTestExecutionResult",
          "description": "Create Test Execution Result type",
          "fields": [
            {
              "name": "testExecution",
              "description": "Test Execution that was created.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TestExecution",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdTestEnvironments",
              "description": "Test Environments that were created.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warnings",
              "description": "Warnings generated during the operation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AddTestEnvironmentsResult",
          "description": "Add Test Environments Result type",
          "fields": [
            {
              "name": "associatedTestEnvironments",
              "description": "Test Environments that were associated.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdTestEnvironments",
              "description": "Test Environments that were created.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warning",
              "description": "Warning generated during the operation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CustomFieldInput",
          "description": "Custom Field Input",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Id of the custom field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "value",
              "description": "Value of the custom field.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "UpdateTestRunResult",
          "description": "Update Test Run Result Type",
          "fields": [
            {
              "name": "warnings",
              "description": "Warnings generated during the operation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AddDefectsResult",
          "description": "Added Defects Result Type",
          "fields": [
            {
              "name": "addedDefects",
              "description": "Ids of the added Defects.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warnings",
              "description": "Warnings generated during the operation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "AttachmentDataInput",
          "description": "Attachment Data Input",
          "fields": null,
          "inputFields": [
            {
              "name": "filename",
              "description": " A valid <b>AttachmentDataInput</b> must have the properties <b>filename</b>, <b>mimeType</b> and <b>data</b> defined.\nIn alternative, the <b>attachmentId</b> property can be used alone.\nIf both <b>attachmentId</b> and other properties are defined, <b>attachmentId</b> takes precedence and will be used as if it was defined alone.\n\n\nFilename of the attachment.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "mimeType",
              "description": "Content Type of the attachment.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "data",
              "description": "Data of the attachment. Base64 format.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "attachmentId",
              "description": "Id of an attachment.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AddEvidenceResult",
          "description": "Add Evidence Result Type",
          "fields": [
            {
              "name": "addedEvidence",
              "description": "Ids of the added Evidence.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warnings",
              "description": "Warnings generated during the operation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "RemoveEvidenceResult",
          "description": "Remove Evidence Result Type",
          "fields": [
            {
              "name": "removedEvidence",
              "description": "Ids of the removed Evidence.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warnings",
              "description": "Warnings generated during the operation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UpdateTestRunStepInput",
          "description": "Update Test Run Step Input",
          "fields": null,
          "inputFields": [
            {
              "name": "comment",
              "description": "Comment to add to the Test Run Step.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "status",
              "description": "Status to set to the Test Run Step.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "evidence",
              "description": "Evidence of the Test Run Step.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TestRunEvidenceOperationsInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "defects",
              "description": "Defects of the Test Run Step.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TestRunDefectOperationsInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "actualResult",
              "description": "Actual Result of the Test Run Step.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "TestRunEvidenceOperationsInput",
          "description": "Test Run Evidence Operations Input",
          "fields": null,
          "inputFields": [
            {
              "name": "add",
              "description": "Evidence to add to the Test Run Step.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AttachmentDataInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "removeIds",
              "description": "Evidence ids to remove from the Test Run Step.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "removeFilenames",
              "description": "Evidence filenames to remove from the Test Run Step.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "TestRunDefectOperationsInput",
          "description": "Test Run Defect Operations Input",
          "fields": null,
          "inputFields": [
            {
              "name": "add",
              "description": "Defects to add to the Test Run Step.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "remove",
              "description": "Defects to remove from the Test Run Step.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "UpdateTestRunStepResult",
          "description": "Update Test Run Step Result Type",
          "fields": [
            {
              "name": "addedDefects",
              "description": "Ids of the added Defects.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removedDefects",
              "description": "Ids of the removed Defects.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addedEvidence",
              "description": "Ids of the added Evidence.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removedEvidence",
              "description": "Ids of the removed Evidence.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warnings",
              "description": "Warnings generated during the operation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "RemoveDefectsResult",
          "description": "Remove defects Result Type",
          "fields": [
            {
              "name": "removedDefects",
              "description": "Ids of the removed Defects.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "warnings",
              "description": "Warnings generated during the operation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "UpdateTestRunStepStatusResult",
          "description": "Update Test Run Step Status Result Type",
          "fields": [
            {
              "name": "warnings",
              "description": "Warnings generated during the operation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "UpdateTestRunExampleStatusResult",
          "description": "Update Test Run Example Status Result Type",
          "fields": [
            {
              "name": "warnings",
              "description": "Warnings generated during the operation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "UpdateIterationStatusResult",
          "description": "Update Test Run iteration status result type",
          "fields": [
            {
              "name": "warnings",
              "description": "Warnings generated during the operation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Schema",
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
          "fields": [
            {
              "name": "types",
              "description": "A list of all types supported by this server.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Type",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "queryType",
              "description": "The type that query operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mutationType",
              "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subscriptionType",
              "description": "If this server support subscription, the type that subscription operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "directives",
              "description": "A list of all directives supported by this server.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Directive",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Type",
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
          "fields": [
            {
              "name": "kind",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "__TypeKind",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fields",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Field",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "interfaces",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "possibleTypes",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "enumValues",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__EnumValue",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inputFields",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ofType",
              "description": null,
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "__TypeKind",
          "description": "An enum describing what kind of type a given `__Type` is.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "SCALAR",
              "description": "Indicates this type is a scalar.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OBJECT",
              "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERFACE",
              "description": "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNION",
              "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENUM",
              "description": "Indicates this type is an enum. `enumValues` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_OBJECT",
              "description": "Indicates this type is an input object. `inputFields` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LIST",
              "description": "Indicates this type is a list. `ofType` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NON_NULL",
              "description": "Indicates this type is a non-null. `ofType` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Field",
          "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "args",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeprecated",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deprecationReason",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__InputValue",
          "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "defaultValue",
              "description": "A GraphQL-formatted string representing the default value for this input value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__EnumValue",
          "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeprecated",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deprecationReason",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Directive",
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locations",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "__DirectiveLocation",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "args",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "__DirectiveLocation",
          "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "QUERY",
              "description": "Location adjacent to a query operation.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MUTATION",
              "description": "Location adjacent to a mutation operation.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUBSCRIPTION",
              "description": "Location adjacent to a subscription operation.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIELD",
              "description": "Location adjacent to a field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FRAGMENT_DEFINITION",
              "description": "Location adjacent to a fragment definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FRAGMENT_SPREAD",
              "description": "Location adjacent to a fragment spread.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INLINE_FRAGMENT",
              "description": "Location adjacent to an inline fragment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VARIABLE_DEFINITION",
              "description": "Location adjacent to a variable definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCHEMA",
              "description": "Location adjacent to a schema definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCALAR",
              "description": "Location adjacent to a scalar definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OBJECT",
              "description": "Location adjacent to an object type definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIELD_DEFINITION",
              "description": "Location adjacent to a field definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARGUMENT_DEFINITION",
              "description": "Location adjacent to an argument definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERFACE",
              "description": "Location adjacent to an interface definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNION",
              "description": "Location adjacent to a union definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENUM",
              "description": "Location adjacent to an enum definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENUM_VALUE",
              "description": "Location adjacent to an enum value definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_OBJECT",
              "description": "Location adjacent to an input object type definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_FIELD_DEFINITION",
              "description": "Location adjacent to an input object field definition.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        }
      ]
    }
  }
}